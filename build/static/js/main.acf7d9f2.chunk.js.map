{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/eventInfoReducer.js","redux/reducers/publicVideos.js","redux/reducers/contactInfoReducer.js","redux/reducers/getMissionReducer.js","redux/reducers/getFoundation.js","redux/reducers/addressReducer.js","redux/reducers/donationReducer.js","redux/reducers/publicPhotos.js","redux/reducers/getPublicGolfer.js","redux/reducers/getPublicGolferId.js","redux/reducers/partnerReducer.js","redux/reducers/getPublicAddress.js","redux/reducers/getPublicContact.js","redux/reducers/getPublicSponsor.js","redux/reducers/goalReducer.js","redux/reducers/foundationDetailsReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/getEventInfoSaga.js","redux/sagas/getVideoSaga.js","redux/sagas/editLocationSaga.js","redux/sagas/contactInfoSaga.js","redux/sagas/addressSaga.js","redux/sagas/editDateSaga.js","redux/sagas/getPublicAboutSaga.js","redux/sagas/getAdminVideosSaga.js","redux/sagas/postVideoSaga.js","redux/sagas/deleteVideoSaga.js","redux/sagas/donationSaga.js","redux/sagas/getPublicPhoto.js","redux/sagas/adminAboutSaga.js","redux/sagas/getPublicGolfer.js","redux/sagas/adminPhotosSaga.js","redux/sagas/postPublicPledge.js","redux/sagas/adminGolfersSaga.js","redux/sagas/partnerSaga.js","redux/sagas/getPublicAddress.js","redux/sagas/getPublicSponsor.js","redux/sagas/goalSaga.js","redux/sagas/index.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Nav/Nav.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/PhotosPageItem/PhotosPageItem.js","components/PhotosPage/PhotosPage.js","components/GolfersPage/GolfersPage.js","components/PledgePage/PledgePage.js","components/PartnersPage/ParntersPage.js","components/ContactPage/ContactPage.js","components/LogOutButton/LogOutButton.js","components/AdminNav/AdminNav.js","components/AdminHomePage/AdminHomePage.js","components/AdminAboutPage/AdminAboutPage.js","components/AdminPhotosPage/AdminPhotosPage.js","components/AdminGolfersPage/AdminGolfersPage.js","components/AdminPledgesPage/AdminPledgesPage.js","components/AdminPartnersPage/AdminPartnersPage.js","components/AdminContactPage/AdminContactPage.js","components/golferDetails/golferDetails.js","components/AdminGolferDetails/AdminGolferDetails.js","components/AdminPartnerDetails/AdminPartnerDetails.js","components/AdminFoundationDetails/AdminFoundationDetails.js","components/AdminChangePassword/AdminChangePassword.js","components/App/App.js","index.js","components/Nav/100HolesforHope.png","components/UserPage/100HolesforHope.png","components/AdminNav/100HolesforHope.png"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","eventInfoReducer","videoReducer","contactInfoReducer","missionReducer","foundationReducer","addressReducer","donationReducer","photosReducer","golferReducer","golferIdReducer","company","level","partner","addressPublicReducer","contactPublicReducer","publicSponsorReducer","golferGoalTotal","golferDonationTotal","partnerPledgeTotal","entireGoalInfo","foundationDetailsReducer","rootReducer","errors","user","partnerReducer","goalReducer","loginUser","logoutUser","updatePassword","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","id","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","getEventInfo","getEventInfoSaga","getResponse","getPublicVideos","getPublicEvents","getPublicVideoSaga","editLocation","editLocationSaga","getContactInfo","editContactInfo","contactInfoSaga","getAddressInfo","editAddressInfo","addressSaga","editDate","editDateSaga","getMission","getFoundation","getMissionSaga","getAdminVideos","getAdminVideosSaga","postVideo","postVideoSaga","videoUrl","url","title","deleteVideo","deleteVideoSaga","delete","getDonationInfo","updateDonationPaymentStatus","exportDonations","filterDates","deleteRows","donationSaga","startingDate","endingDate","getPublicPhoto","getPublicPhotoSaga","editMission","postNewFoundation","getAdminFoundation","deleteFoundation","editFoundation","getFoundationDetails","editFoundationName","editFoundationImage","editFoundationBio","adminAboutSaga","getPublicGolfer","getPublicGolferId","getPublicGolferSaga","getAdminPhotos","postAdminPhotos","deleteAdminPhotos","adminPhotosSaga","postPledgeSaga","postPublicSaga","takeEvery","getAdminGolfers","postAdminGolfer","deleteAdminGolfer","getIndividualDetails","editGolferName","editGolferGoal","editGolferBio","editGolferPurpose","editGoferPhoto","adminGolfersSaga","getPartnerInfo","getPartnerLevels","addNewPartner","removePartner","getPartnerDetails","editPartnerName","editPartnerImage","editPartnerLevel","addPartnerLevel","partnerSaga","getPublicAddress","getPublicContact","sendEmail","getPublicAddressSaga","to","email","name","subject","body","getPublicSponsor","getPublicSponsorSaga","getGolfersGoalTotal","getGolfersDonationTotal","getPartnerPledgeTotal","getEntireGoalInfo","editGoalInfo","goalSaga","rootSaga","all","Footer","LoginPage","username","password","login","event","preventDefault","props","dispatch","handleInputChangeFor","propertyName","setState","target","value","classes","this","Grid","container","spacing","direction","alignItems","justify","item","Card","className","card","CardContent","role","onSubmit","Typography","variant","pageTitle","TextField","label","textField","onChange","Button","button","style","backgroundColor","color","Component","connect","withStyles","minWidth","width","textAlign","marginTop","margin","marginBottom","RegisterPage","htmlFor","onClick","ComponentToShow","ComponentToProtect","component","otherProps","Nav","AppBar","buttonLeft","sm","buttonStyling","src","logo","alt","height","buttonRight","float","textDecoration","AboutPage","topMargin","mission","about","map","background","padding","key","bottom","right","paddingRight","display","bio","reduxStore","fontSize","UserPage","getVideo","getEvent","getGolferGoalTotal","getGolferDonationTotal","getGoalInfo","total","total_received","entireGoal","goal","entireDonationTotal","Number","HolesforHope","dayjs","date","format","location","marginLeft","year","parseInt","toLocaleString","LinearProgress","normalizedNum","normaliseGolferTotals","colorPrimary","linearColorPrimary","barColorPrimary","linearBarColorPrimary","borderRadius","normaliseEntireTotals","theme","progress","Transition","Slide","PhotosPageItem","open","handleClickOpen","handleClose","description","objectFit","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","DialogActions","PhotosPage","getPhotos","justifyContent","GolfersPage","getGolfers","viewGolfer","history","push","first_name","last_name","img_url","Pledge","phone_number","golfer_id","amount","max","handleChangeFirstName","e","handleChangeLastName","handleChangePhone","handleChangeEmail","handleChangePledging","handleChangeType","handleChangeMax","handleChangeAmount","handleSubmit","length","test","alert","replace","perBirdiePledge","perBirdie","helperText","flatPledge","introduction","marginRight","placeholder","Select","MenuItem","paragraph","ParntersPage","getSponsor","currentLevel","href","sponsor_level","ContactPage","getAddress","getContact","string","phone","toString","area","slice","first","last","root","xs","Paper","paper","required","multiline","rows","rowsMax","street","city","zip","adjustLayout","fax","flexGrow","unit","AdminNav","AdminHomePage","editGoal","addVideo","videoTitle","goalAmount","goalYear","cancelLocationSave","cancelDateSave","cancelGoalSave","cancelVideoAdd","primaryButton","secondaryButton","InputLabelProps","shrink","center","hover","dropStyles","border","cursor","AdminAboutPage","addFoundation","cancelMissionSave","cancelAddFoundation","saveAddFoundation","image","handleFinishedUpload","info","fileUrl","viewPartner","textArea","innderDropElement","class","children","onFinish","s3Url","maxSize","upload","server","AdminPhotosPage","addPhoto","cancelAddPhoto","saveAddPhoto","deletePhoto","AdminGolfersPage","purpose","addGolfer","cancelAddGolfer","saveAddGolfer","removeGolfer","addButton","cancelButton","saveButton","golfer","AdminPledgesPage","updatePaymentStatus","exportToExcel","sendFilter","cancelFilter","sendDeleteRows","cancelDeleteRows","window","reload","header","refreshPage","Table","table","TableHead","TableRow","TableCell","TableBody","donation","firstname","lastname","checked","overflowX","overflow","AdminPartnersPage","companyName","partnerLevel","levelName","addLevel","addPartner","assignPartnerLevel","handleCompanyNameChange","handleLevelChange","handleLevelNameChange","cancelAddNewPartner","objectToSend","cancelAddLevel","saveLevel","number","addPartnerButton","partnerCard","companies","AdminContactPage","editAddress","editContact","contactName","contactEmail","cancelEditAddress","cancelEditContact","golferDetails","match","params","MAX","leftCard","normalise","handleTooltipOpen","pledgeButton","backButton","AdminGolferDetails","editName","editImage","editBio","editPurpose","cancelEditName","saveEditName","cancelEditGoal","saveEditGoal","cancelEditBio","saveEditBio","cancelEditPurpose","saveEditPurpose","editPhoto","cancelEditPhoto","saveEditPhoto","AdminPartnerDetails","editLevel","cancelEditLevel","saveEditLevel","cancelEditImage","saveEditImage","goBack","AdminFoundationDetails","AdminChangePassword","old","new","App","exact","from","path","PledgePage","PartnersPage","AdminHome","AdminAbout","AdminPhotos","AdminGolfers","AdminPledges","AdminPartners","AdminContact","render","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.acf7d9f2.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    case 'PASSWORD_DIDNT_MATCH':\n      return 'Ensure your old password is a match.'\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const eventInfoReducer = (state={}, action)=>{\n    if(action.type === `SET_EVENT`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default eventInfoReducer;","const videoReducer = (state=[], action)=>{\n    if(action.type === `SET_VIDEOS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default videoReducer;","const contactInfoReducer = (state={}, action)=>{\n    if(action.type === `SET_CONTACT_INFO`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default contactInfoReducer;","const missionReducer = (state={}, action)=>{\n    if(action.type === `SET_MISSION`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default missionReducer;","const foundationReducer = (state=[], action)=>{\n    if(action.type === `SET_FOUNDATION`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default foundationReducer;","const addressReducer = (state={}, action)=>{\n    if(action.type === `SET_ADDRESS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default addressReducer;","const donationReducer = (state=[], action)=>{\n    if(action.type === `SET_DONATIONS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default donationReducer;","const photosReducer = (state=[], action)=>{\n    if(action.type === `SET_PHOTOS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default photosReducer;","const golferReducer = (state=[], action)=>{\n    if(action.type === `SET_ALL_GOLFERS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default golferReducer;","const golferIdReducer = (state=[], action)=>{\n    if(action.type === `SET_GOLFER`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default golferIdReducer;","import { combineReducers } from 'redux';\n\nconst company = (state=[], action)=>{\n    if(action.type === `SET_PARTNERS`){\n        return action.payload;\n    }\n    return state;\n}\n\nconst level = (state=[], action)=>{\n    if(action.type === `SET_PARTNER_LEVELS`){\n        return action.payload;\n    }\n    return state;\n}\n\nconst partner =  (state={}, action)=>{\n    if(action.type === `SET_PARTNER`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    company,\n    level,\n    partner\n  });","const addressPublicReducer = (state=[], action)=>{\n    if(action.type === `SET_PUBLIC_ADDRESS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default addressPublicReducer;","const contactPublicReducer = (state=[], action)=>{\n    if(action.type === `SET_PUBLIC_CONTACT`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default contactPublicReducer;","const publicSponsorReducer = (state=[], action)=>{\n    if(action.type === `SET_PUBLIC_SPONSOR`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default publicSponsorReducer;","import { combineReducers } from 'redux';\n\nconst golferGoalTotal = (state={}, action)=>{\n    if(action.type === `SET_GOLFER_GOAL_TOTAL`){\n        return action.payload;\n    }\n    return state;\n}\n\nconst golferDonationTotal = (state={}, action)=>{\n    if(action.type === `SET_GOLFER_DONATION_TOTAL`){\n        return action.payload;\n    }\n    return state;\n}\n\nconst partnerPledgeTotal =  (state={}, action)=>{\n    if(action.type === `SET_PARTNER_PLEDGE_TOTAL`){\n        return action.payload;\n    }\n    return state;\n}\n\nconst entireGoalInfo = (state={}, action)=>{\n    if(action.type === `SET_ENTIRE_GOAL_INFO`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    golferGoalTotal,\n    golferDonationTotal,\n    partnerPledgeTotal,\n    entireGoalInfo,\n  });","const foundationDetailsReducer = (state={}, action)=>{\n    if(action.type === `SET_FOUNDATION_DETAILS`){\n        return action.payload;\n    }\n    return state;\n}\n\nexport default foundationDetailsReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport eventInfoReducer from './eventInfoReducer';\nimport videoReducer from './publicVideos';\nimport contactInfoReducer from './contactInfoReducer';\nimport missionReducer from './getMissionReducer';\nimport foundationReducer from './getFoundation';\nimport addressReducer from './addressReducer';\nimport donationReducer from './donationReducer';\nimport photosReducer from './publicPhotos';\nimport golferReducer from './getPublicGolfer';\nimport golferIdReducer from './getPublicGolferId';\nimport partnerReducer from './partnerReducer';\nimport addressPublicReducer from './getPublicAddress';\nimport contactPublicReducer from './getPublicContact';\nimport publicSponsorReducer from './getPublicSponsor';\nimport goalReducer from './goalReducer';\nimport foundationDetailsReducer from './foundationDetailsReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  eventInfoReducer,\n  videoReducer,\n  contactInfoReducer,\n  missionReducer,\n  foundationReducer,\n  addressReducer,\n  donationReducer,\n  photosReducer,\n  golferReducer,\n  golferIdReducer,\n  partnerReducer,\n  addressPublicReducer,\n  contactPublicReducer,\n  publicSponsorReducer,\n  goalReducer,\n  foundationDetailsReducer\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\n\nfunction* updatePassword(action) {\n  try {\n    const response = yield axios.put(`/api/user/password/${action.payload.id}`, action.payload);\n    console.log(response.status)\n  } catch (error){\n    yield put({ type: 'PASSWORD_DIDNT_MATCH' });\n    console.log('failed updating password', error); \n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n  yield takeLatest('NEW_PASSWORD', updatePassword)\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getEventInfo() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/event-info`);\n        yield put({type: 'SET_EVENT', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getEventInfoSaga() {\n    yield takeLatest('GET_EVENT_INFO', getEventInfo);\n}\n\nexport default getEventInfoSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getPublicVideos() {\n    try{\n        const getResponse = yield axios.get(`/api/public/videos`);\n        yield put({type: 'SET_VIDEOS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPublicEvents() {\n    try{\n        const getResponse = yield axios.get(`/api/public/event-info`);\n        yield put({type: 'SET_EVENT', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPublicVideoSaga() {\n    yield takeLatest('GET_VIDEOS', getPublicVideos);\n    yield takeLatest('GET_EVENTS', getPublicEvents);\n}\n\nexport default getPublicVideoSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* editLocation(action) {\n    try {\n        yield axios.put(`/api/admin/location/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_EVENT_INFO'})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* editLocationSaga() {\n    yield takeLatest('EDIT_LOCATION', editLocation);\n}\n\nexport default editLocationSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getContactInfo() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/contact-info`);\n        yield put({type: 'SET_CONTACT_INFO', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* editContactInfo(action) {\n    try{\n        yield axios.put(`/api/admin/contact-info/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_CONTACT_INFO'});\n    }\n    catch (error){\n        console.log('failed editing contact info', error);\n    }\n}\n\nfunction* contactInfoSaga() {\n    yield takeLatest('GET_CONTACT_INFO', getContactInfo)\n    yield takeLatest('EDIT_CONTACT', editContactInfo)\n}\n\nexport default contactInfoSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getAddressInfo() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/address-info`);\n        yield put({type: 'SET_ADDRESS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* editAddressInfo(action) {\n    try{\n        yield axios.put(`/api/admin/address-info/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_ADDRESS_INFO'});\n    }\n    catch (error){\n        console.log('failed editing address info', error); \n    }\n}\n\nfunction* addressSaga() {\n    yield takeLatest('GET_ADDRESS_INFO', getAddressInfo)\n    yield takeLatest('EDIT_ADDRESS', editAddressInfo)\n}\n\nexport default addressSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* editDate(action) {\n    try {\n        yield axios.put(`/api/admin/date/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_EVENT_INFO'})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* editDateSaga() {\n    yield takeLatest('EDIT_DATE', editDate);\n}\n\nexport default editDateSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n//get mission\nfunction* getMission() {\n    try{\n        const getResponse = yield axios.get(`/api/public/mission`);\n        yield put({type: 'SET_MISSION', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n//get foundation\nfunction* getFoundation() {\n    try{\n        const getResponse = yield axios.get(`/api/public/foundation`);\n        yield put({type: 'SET_FOUNDATION', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getMissionSaga() {\n    yield takeLatest('GET_MISSION', getMission)\n    yield takeLatest('GET_FOUNDATION', getFoundation)\n}\n\nexport default getMissionSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getAdminVideos() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/videos`);\n        yield put({type: 'SET_VIDEOS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n\nfunction* getAdminVideosSaga() {\n    yield takeLatest('GET_VIDEOS_ADMIN', getAdminVideos);\n}\n\nexport default getAdminVideosSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* postVideo(action){\n    try{\n        let data = {\n            videoUrl: action.payload.url,\n            title: action.payload.title\n        }\n        console.log(data)\n        yield axios.post(`/api/admin/videos`, data);\n        yield put({type: 'GET_VIDEOS_ADMIN'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\nfunction* postVideoSaga() {\n    yield takeLatest('ADD_VIDEO', postVideo);\n}\n\nexport default postVideoSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* deleteVideo(action){\n    try{\n        yield axios.delete(`api/admin/videos/${action.payload}`);\n        yield put({type: 'GET_VIDEOS_ADMIN'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\nfunction* deleteVideoSaga() {\n    yield takeLatest('DELETE_VIDEO', deleteVideo);\n  }\n\nexport default deleteVideoSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getDonationInfo() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/donation-info`);\n        yield put({type: 'SET_DONATIONS', payload: getResponse.data });\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* updateDonationPaymentStatus(action) {\n    try{        \n        yield axios.put(`/api/admin/donation-info/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_DONATION_INFO' });\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* exportDonations() {\n    try{\n        yield axios.get(`/api/admin/donation-export`);\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* filterDates(action){\n    try{\n        const getResponse = yield axios.get(`/api/admin/donation?startingDate=${action.payload.startingDate}&endingDate=${action.payload.endingDate}`);\n        yield put({type: 'SET_DONATIONS', payload: getResponse.data})\n    } catch (error){\n        console.log(error)\n    }\n}\n\nfunction* deleteRows(action){\n    try{\n        yield axios.delete(`api/admin/donation?startingDate=${action.payload.startingDate}&endingDate=${action.payload.endingDate}`);\n        yield put({type: 'GET_DONATION_INFO'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\nfunction* donationSaga() {\n    yield takeLatest('GET_DONATION_INFO', getDonationInfo);\n    yield takeLatest('UPDATE_PAYMENT_STATUS', updateDonationPaymentStatus);\n    yield takeLatest('EXPORT_DONATIONS', exportDonations);\n    yield takeLatest('SEND_FILTER_DATES', filterDates);\n    yield takeLatest('SEND_DELETE_ROWS', deleteRows)\n}\n\nexport default donationSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getPublicPhoto() {\n    try{\n        const getResponse = yield axios.get(`/api/public/photos`);\n        yield put({type: 'SET_PHOTOS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPublicPhotoSaga() {\n    yield takeLatest('GET_PHOTOS', getPublicPhoto);\n}\n\nexport default getPublicPhotoSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n//get mission\nfunction* getMission() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/mission`);\n        yield put({type: 'SET_MISSION', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n// edit mission\nfunction* editMission(action) {\n    try {\n        yield axios.put(`/api/admin/mission/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_ADMIN_MISSION'})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// post new foundation\nfunction* postNewFoundation(action){\n    try{\n        yield axios.post(`/api/admin/foundation`, action.payload);\n        yield put({type: 'GET_ADMIN_FOUNDATION'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\n//get foundation\nfunction* getAdminFoundation() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/foundation`);\n        yield put({type: 'SET_FOUNDATION', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* deleteFoundation(action){\n    try{\n        yield axios.delete(`api/admin/foundation/${action.payload}`);\n        yield put({type: 'GET_ADMIN_FOUNDATION'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\nfunction* editFoundation(action) {\n    try {\n        yield axios.put(`/api/admin/foundation/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_ADMIN_FOUNDATION'})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n//get foundation\nfunction* getFoundationDetails(action) {\n    try{\n        const getResponse = yield axios.get(`/api/admin/foundation-details?id=${action.payload}`);\n        yield put({type: 'SET_FOUNDATION_DETAILS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n// put to edit foundation name\nfunction* editFoundationName(action) {\n    try {\n        yield axios.put(`/api/admin/foundation/name/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_FOUNDATION_DETAILS', payload: action.payload.id})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// put to edit foundation image\nfunction* editFoundationImage(action) {\n    try {\n        yield axios.put(`/api/admin/foundation/image/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_FOUNDATION_DETAILS', payload: action.payload.id})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// put to edit foundation bio\nfunction* editFoundationBio(action) {\n    try {\n        yield axios.put(`/api/admin/foundation/bio/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_FOUNDATION_DETAILS', payload: action.payload.id})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* adminAboutSaga() {\n    yield takeLatest('GET_ADMIN_MISSION', getMission);\n    yield takeLatest('EDIT_ADMIN_MISSION', editMission);\n    yield takeLatest('ADD_FOUNDATION', postNewFoundation);\n    yield takeLatest('GET_ADMIN_FOUNDATION', getAdminFoundation);\n    yield takeLatest('DELETE_FOUNDATION', deleteFoundation);\n    yield takeLatest('EDIT_ADMIN_FOUNDATION', editFoundation);\n    yield takeLatest('GET_FOUNDATION_DETAILS', getFoundationDetails);\n    yield takeLatest('EDIT_FOUNDATION_NAME', editFoundationName);\n    yield takeLatest('EDIT_FOUNDATION_IMAGE', editFoundationImage);\n    yield takeLatest('EDIT_FOUNDATION_BIO', editFoundationBio);\n}\n\nexport default adminAboutSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getPublicGolfer() {\n    try{\n        const getResponse = yield axios.get(`/api/public/golfers`);\n        yield put({type: 'SET_ALL_GOLFERS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPublicGolferId(action) {\n    try{\n        const getResponse = yield axios.get(`/api/public/golfers/${action.payload}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPublicGolferSaga() {\n    yield takeLatest('GET_ALL_GOLFERS', getPublicGolfer);\n    yield takeLatest('GET_GOLFER_DETAILS', getPublicGolferId);\n}\n\nexport default getPublicGolferSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// GET all photos\nfunction* getAdminPhotos() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/photos`);\n        yield put({type: 'SET_PHOTOS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n// post a new photo\nfunction* postAdminPhotos(action){\n    try{\n        yield axios.post(`/api/admin/photos`, action.payload);\n        yield put({type: 'GET_ADMIN_PHOTOS'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\n// delete a photo\nfunction* deleteAdminPhotos(action){\n    try{\n        yield axios.delete(`api/admin/photos/${action.payload}`);\n        yield put({type: 'GET_ADMIN_PHOTOS'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\nfunction* adminPhotosSaga() {\n    yield takeLatest('GET_ADMIN_PHOTOS', getAdminPhotos);\n    yield takeLatest('ADMIN_ADD_PHOTO', postAdminPhotos);\n    yield takeLatest('ADMIN_DELETE_PHOTO', deleteAdminPhotos);\n}\n\nexport default adminPhotosSaga;","import axios from 'axios';\nimport { takeEvery, put } from 'redux-saga/effects';\n\n//post item for order\nfunction* postPledgeSaga(action){\ntry{    \n    yield axios.post(`/api/public/pledges`,  action.payload);\n}\n  catch(error){\n      console.log('error in POST item', error);\n  }\n}\n\nfunction* postPublicSaga() {\n    yield takeEvery('POST_PLEDGE', postPledgeSaga);\n\n}\n\nexport default postPublicSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getAdminGolfers() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/golfers`);\n        yield put({type: 'SET_ALL_GOLFERS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n// post a new golfer\nfunction* postAdminGolfer(action){\n    try{\n        yield axios.post(`/api/admin/golfers`, action.payload);\n        yield put({type: 'GET_ADMIN_GOLFERS'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\n// delete a golfer\nfunction* deleteAdminGolfer(action){\n    try{\n        yield axios.delete(`api/admin/golfers/${action.payload}`);\n        yield put({type: 'GET_ADMIN_GOLFERS'})\n    } catch (error){\n        console.log(error)\n    }\n}\n\n// get individual golfer details\nfunction* getIndividualDetails(action) {\n    try{\n        const getResponse = yield axios.get(`/api/admin/golfers/${action.payload}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n// edit golfers first and last names\nfunction* editGolferName(action) {\n    try {\n        yield axios.put(`/api/admin/golfers/name/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/golfers/${action.payload.id}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// edit golfers goal\nfunction* editGolferGoal(action) {\n    try {\n        yield axios.put(`/api/admin/golfers/goal/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/golfers/${action.payload.id}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// edit golfers bio\nfunction* editGolferBio(action) {\n    try {\n        yield axios.put(`/api/admin/golfers/bio/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/golfers/${action.payload.id}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// edit golfers purpose\nfunction* editGolferPurpose(action) {\n    try {\n        yield axios.put(`/api/admin/golfers/purpose/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/golfers/${action.payload.id}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\n// edit golfers photo\nfunction* editGoferPhoto(action) {\n    try {\n        yield axios.put(`/api/admin/golfers/image/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/golfers/${action.payload.id}`);\n        yield put({type: 'SET_GOLFER', payload: getResponse.data})\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* adminGolfersSaga() {\n    yield takeLatest('GET_ADMIN_GOLFERS', getAdminGolfers);\n    yield takeLatest('ADMIN_ADD_GOLFER', postAdminGolfer)\n    yield takeLatest('ADMIN_DELETE_GOLFER', deleteAdminGolfer)\n    yield takeLatest('ADMIN_GET_GOLFER_DETAILS', getIndividualDetails);\n    yield takeLatest('EDIT_GOLFER_NAME', editGolferName);\n    yield takeLatest('EDIT_GOLFER_GOAL', editGolferGoal);\n    yield takeLatest('EDIT_GOLFER_BIO', editGolferBio);\n    yield takeLatest('EDIT_GOLFER_PURPOSE', editGolferPurpose);\n    yield takeLatest('EDIT_GOLFER_PHOTO', editGoferPhoto)\n}\n\nexport default adminGolfersSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getPartnerInfo() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/partners`);\n        yield put({type: 'SET_PARTNERS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log('failed GETTING partners', error); \n    }\n}\n\nfunction* getPartnerLevels() {\n    try{\n        const getResponse = yield axios.get(`/api/admin/partner-levels`);\n        yield put({type: 'SET_PARTNER_LEVELS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log('failed GETTING partner levels', error); \n    }\n}\n\nfunction* addNewPartner(action) {\n    try{\n        yield axios.post(`/api/admin/partners`, action.payload);\n        yield put({type: 'GET_PARTNERS'});\n    }\n    catch (error){\n        console.log('failed adding new partner', error); \n    }\n}\n\nfunction* removePartner(action) {\n    try{\n        yield axios.delete(`/api/admin/partners/delete/${action.payload}`);\n        yield put({type: 'GET_PARTNERS'});\n    }\n    catch (error){\n        console.log('failed adding new partner', error); \n    }\n}\n\nfunction* getPartnerDetails(action) {\n    try{\n        const getResponse = yield axios.get(`/api/admin/partners/${action.payload}`);\n        yield put({type: 'SET_PARTNER', payload: getResponse.data})\n    }\n    catch (error){\n        console.log('failed GETTING requested partner', error); \n    }\n}\n\nfunction* editPartnerName(action) {\n    try {\n        yield axios.put(`/api/admin/partners/name/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/partners/${action.payload.id}`);\n        yield put({type: 'SET_PARTNER', payload: getResponse.data});\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* editPartnerImage(action) {\n    try {\n        yield axios.put(`/api/admin/partners/image/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/partners/${action.payload.id}`);\n        yield put({type: 'SET_PARTNER', payload: getResponse.data});\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* editPartnerLevel(action) {\n    try {\n        yield axios.put(`/api/admin/partners/level/${action.payload.id}`, action.payload);\n        const getResponse = yield axios.get(`/api/admin/partners/${action.payload.id}`);\n        yield put({type: 'SET_PARTNER', payload: getResponse.data});\n    } catch (error) {\n        console.log('Failed updating event location', error);\n    }\n}\n\nfunction* addPartnerLevel(action) {\n    try{\n        yield axios.post(`/api/admin/partner-level`, action.payload);\n        yield put({type: 'GET_PARTNER_LEVELS'});\n    }\n    catch (error){\n        console.log('failed adding new partner', error); \n    }\n}\n\nfunction* partnerSaga() {\n    yield takeLatest('GET_PARTNERS', getPartnerInfo)\n    yield takeLatest('GET_PARTNER_LEVELS', getPartnerLevels)\n    yield takeLatest('ADD_PARTNER', addNewPartner)\n    yield takeLatest('REMOVE_PARTNER', removePartner)\n    yield takeLatest('GET_PARTNER_DETAILS', getPartnerDetails)\n    yield takeLatest('EDIT_PARTNER_NAME', editPartnerName)\n    yield takeLatest('EDIT_PARTNER_IMAGE', editPartnerImage)\n    yield takeLatest('EDIT_PARTNER_LEVEL', editPartnerLevel)\n    yield takeLatest('ADD_LEVEL', addPartnerLevel)\n}\n\nexport default partnerSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getPublicAddress() {\n    try{\n        const getResponse = yield axios.get(`/api/public/address`);\n        yield put({type: 'SET_PUBLIC_ADDRESS', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPublicContact() {\n    try{\n        const getResponse = yield axios.get(`/api/public/contact`);\n        yield put({type: 'SET_PUBLIC_CONTACT', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n//post to send email\nfunction* sendEmail(action){\n    try{\n        const getResponse = yield axios.get(`/api/public/email`);\n\n        const data = {\n            to: getResponse.data,\n            email: action.payload.email,\n            name: action.payload.name,\n            subject: action.payload.subject,\n            body: action.payload.body\n        }\n\n        yield axios.post(`/api/public/email`, data);\n    }\n      catch(error){\n          console.log('error in POST item', error);\n      }\n    }\n\nfunction* getPublicAddressSaga() {\n    yield takeLatest('GET_ADDRESS', getPublicAddress);\n    yield takeLatest('GET_CONTACT', getPublicContact);\n    yield takeLatest('SEND_EMAIL', sendEmail)\n}\n\nexport default getPublicAddressSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n//get public sponsor saga\nfunction* getPublicSponsor() {\n    try{\n        const getResponse = yield axios.get(`/api/public/sponsor`);\n        yield put({type: 'SET_PUBLIC_SPONSOR', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\n\nfunction* getPublicSponsorSaga() {\n    yield takeLatest('GET_PUBLIC_SPONSOR', getPublicSponsor);\n}\n\nexport default getPublicSponsorSaga;","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getGolfersGoalTotal() {\n    try{\n        const getResponse = yield axios.get(`/api/public/golfer-goal-total`);\n        yield put({type: 'SET_GOLFER_GOAL_TOTAL', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getGolfersDonationTotal() {\n    try{\n        const getResponse = yield axios.get(`/api/public/golfer-donation-total`);\n        yield put({type: 'SET_GOLFER_DONATION_TOTAL', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getPartnerPledgeTotal() {\n    try{\n        const getResponse = yield axios.get(`/api/public/partner-pledge-total`);\n        yield put({type: 'SET_PARTNER_PLEDGE_TOTAL', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* getEntireGoalInfo() {\n    try{\n        const getResponse = yield axios.get(`/api/public/entire-goal-info`);\n        yield put({type: 'SET_ENTIRE_GOAL_INFO', payload: getResponse.data})\n    }\n    catch (error){\n        console.log(error); \n    }\n}\n\nfunction* editGoalInfo(action) {\n    try{\n        yield axios.put(`/api/admin/goal-info/${action.payload.id}`, action.payload);\n        yield put({type: 'GET_ENTIRE_GOAL_INFO'});\n    }\n    catch (error){\n        console.log('failed editing address info', error); \n    }\n}\n\nfunction* goalSaga() {\n    yield takeLatest('GET_GOLFERS_GOAL_TOTAL', getGolfersGoalTotal)\n    yield takeLatest('GET_GOLFERS_DONATION_TOTAL', getGolfersDonationTotal)\n    yield takeLatest('GET_PARTNER_PLEDGE_TOTAL', getPartnerPledgeTotal)\n    yield takeLatest('GET_ENTIRE_GOAL_INFO', getEntireGoalInfo)\n    yield takeLatest('EDIT_GOAL_INFO', editGoalInfo)\n}\n\nexport default goalSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport getEventInfoSaga from './getEventInfoSaga';\nimport getPublicVideoSaga from './getVideoSaga';\nimport editLocationSaga from './editLocationSaga';\nimport contactInfoSaga from './contactInfoSaga';\nimport addressSaga from './addressSaga';\nimport editDateSaga from './editDateSaga';\nimport getMissionSaga from './getPublicAboutSaga';\nimport getAdminVideosSaga from './getAdminVideosSaga';\nimport postVideoSaga from './postVideoSaga';\nimport deleteVideoSaga from './deleteVideoSaga';\nimport donationSaga from './donationSaga';\nimport getPublicPhotoSaga from './getPublicPhoto';\nimport adminAboutSaga from './adminAboutSaga';\nimport getPublicGolferSaga from './getPublicGolfer';\nimport adminPhotosSaga from './adminPhotosSaga';\nimport postPublicSaga from './postPublicPledge';\nimport adminGolfersSaga from './adminGolfersSaga';\nimport partnerSaga from './partnerSaga';\nimport getPublicAddressSaga from './getPublicAddress';\nimport getPublicSponsorSaga from './getPublicSponsor';\nimport goalSaga from './goalSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    getEventInfoSaga(),\n    getPublicVideoSaga(),\n    editLocationSaga(),\n    contactInfoSaga(),\n    addressSaga(),\n    editDateSaga(),\n    getMissionSaga(),\n    getAdminVideosSaga(),\n    postVideoSaga(),\n    deleteVideoSaga(),\n    donationSaga(),\n    getPublicPhotoSaga(),\n    adminAboutSaga(),\n    getPublicGolferSaga(),\n    adminPhotosSaga(),\n    postPublicSaga(),\n    adminGolfersSaga(),\n    partnerSaga(),\n    getPublicAddressSaga(),\n    getPublicSponsorSaga(),\n    goalSaga(),\n  ]);\n}\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; 2019 Minnesota PGA\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles =  {\n  card: {\n    minWidth: 275,\n    width: 300,\n    textAlign: 'center',\n    marginTop: '100px'\n  },\n  pageTitle: {\n    margin: '20px auto 20px auto'\n  },\n  textField: {\n    marginBottom: '10px',\n    width: 200,\n  },\n  button: {\n    marginBottom: '10px'\n  }\n};\n\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n\n  render() {\n    \n    const { classes } = this.props;\n\n    return (\n      <Grid \n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        >\n        <Grid item>\n          <Card className={classes.card}>\n            <CardContent>\n            {this.props.errors.loginMessage && (\n              <h2\n                className=\"alert\"\n                role=\"alert\"\n              >\n                {this.props.errors.loginMessage}\n              </h2>\n            )}\n            <form onSubmit={this.login}>\n              <Typography variant=\"h2\" className={classes.pageTitle}>\n                Login\n              </Typography>\n              <div>\n                  <TextField\n                    type=\"text\"\n                    name=\"username\"\n                    label=\"Username\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.username}\n                    onChange={this.handleInputChangeFor('username')}\n                  />\n              </div>\n              <div>\n                  <TextField\n                    type=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    variant=\"outlined\"\n                    className={classes.textField}\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor('password')}\n                  />\n              </div>\n              <div>\n                <Button \n                className={classes.button}\n                type=\"submit\"\n                name=\"submit\"\n                value=\"Log In\"\n                variant=\"contained\"\n                style={{backgroundColor: 'rgb(180,151,89)', color: '#FFFFFF'}}\n                >\n                Submit\n                </Button>\n              </div>\n            </form>\n            {/* <center>\n              <button\n                type=\"button\"\n                className=\"link-button\"\n                onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n              >\n                Don't have an account? Register here\n              </button>\n            </center> */}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(LoginPage));\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"register-form\">\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport logo from './100HolesforHope.png';\n\n// Material UI stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles =  {\n  buttonLeft: {\n    float: 'left'\n  },\n  buttonRight: {\n    marginTop: '50px'\n  },\n  buttonStyling: {\n    textDecoration: 'none',\n    color: 'white'\n  }\n};\n\nclass Nav extends Component {\n  render(){\n\n    const { classes } = this.props;\n\n    return(\n\n      <AppBar style={{backgroundColor: '#253155'}}>\n        <Grid container spacing={4}>\n          <Grid item className={classes.buttonLeft} sm={4}>\n            <div style={{width: 300}}>\n              <Button>\n                <Link to=\"/home\" className={classes.buttonStyling}>\n                <img src={logo} alt=\"100 Holes For Hope\" width='200px' height='75px' />\n                </Link>\n              </Button>\n            </div>\n          </Grid>\n          <Grid item className={classes.buttonRight} sm={8}>\n            <span>\n            <Button>\n              <Link className=\"nav-link\" to=\"/home\" className={classes.buttonStyling}>\n                Home\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/about\" className={classes.buttonStyling}>\n                About\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/photos\" className={classes.buttonStyling}>\n                Photos\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/golfers\" className={classes.buttonStyling}>\n                Golfers\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/pledge\" className={classes.buttonStyling}>\n                Pledge\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/partners\" className={classes.buttonStyling}>\n                Partners\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/contact\" className={classes.buttonStyling}>\n                Contact\n              </Link>\n            </Button>\n            </span>\n          </Grid>\n        </Grid>\n      </AppBar>\n    )\n  }\n  \n};\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Nav));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav'\n\n// Material UI\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n\nconst styles = {\n  card: {\n      width: '60%',\n      height: 'auto',\n      margin: '0 auto',\n      marginTop: '4%',\n      padding: '3%'\n  },\n  topMargin: {\n      marginTop: '8%'\n  },\n  mission: {\n      width: '50%',\n      margin: '0 auto',\n      textAlign: 'center'\n  },\n  bio: {\n      display: 'inline-block',\n      textAlign: 'center',\n      fontSize: '1rem',\n      bottom: '400px',\n      right: '100px',\n}\n};\n\nclass AboutPage extends Component {\n\n  componentDidMount() {\n    this.getMission();\n    this.getFoundation();\n}\n  \n  getMission = ()=> {\n    this.props.dispatch({ type: \"GET_MISSION\"});\n  }\n\n  getFoundation = ()=> {\n    this.props.dispatch({ type: \"GET_FOUNDATION\"});\n  }\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Nav />\n        <div className={classes.topMargin}>\n          <h1>About</h1>\n            <div className={classes.mission}>\n              <p>\n                {this.props.missionReducer.about}\n              </p>\n            </div>\n          <Card className={classes.card}>\n            <Grid container spacing={9} justify='center'>\n            {this.props.foundationReducer.map( (item) => {\n              return(\n                <div style={{background:'#ffffff', width:'auto', height: 'auto', color:'#253055', padding:'2rem'}}>\n                <Grid item key={item.id}>\n                  <h3 style={{textAlign:'center', bottom:'100px', right:'400px', marginTop: '2.5rem'}}>{item.name}</h3>\n\n                  <Grid container spacing={1} justify='center' >\n                    <img src={item.url} alt={item.name} width='260px' height='auto' textAlign='center' style={{float:'left', paddingRight : '5px', \n                    display:'inline-block'}}/>\n                  </Grid>\n\n                  <br></br>\n                    <Grid container spacing={1} justify='center'>\n                    <p  style={{textAlign:'left', width:'450px', bottom:'100px', right:'400px' }}>{item.bio}</p>\n                  </Grid>\n\n                </Grid>\n                </div>\n                )\n              })}\n              </Grid>\n            </Card>\n          </div>\n        </div>\n      \n    )\n  }\n}\nconst putReduxStateOnProps = (reduxStore) => ({\n  missionReducer: reduxStore.missionReducer,\n  foundationReducer: reduxStore.foundationReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AboutPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport dayjs from 'dayjs'\nimport HolesforHope from './100HolesforHope.png';\nimport Nav from '../Nav/Nav'\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Grid from '@material-ui/core/grid';\n\nconst styles = theme => ({\n  progress: {\n      margin: theme.spacing(2),\n  },\n  linearColorPrimary: {\n      backgroundColor: '#d3dee0',\n  },\n  linearBarColorPrimary: {\n      backgroundColor: '#b49759',\n  },\n  topMargin: {\n      marginTop: '9%'\n  },\n  card: {\n      textAlign: 'center'\n  },\n  logo: {\n      textAlign: 'center'\n  },\n  event: {\n      marginBottom: '2.5rem'\n  }\n});\n\nclass UserPage extends Component {\n\n  componentDidMount() {\n    this.getVideo();\n    this.getEvent();\n    this.getGolferGoalTotal();\n    this.getGolferDonationTotal();\n    this.getPartnerPledgeTotal();\n    this.getGoalInfo();\n}\n\ngetVideo = ()=> {\n  this.props.dispatch({ type: \"GET_VIDEOS\"});\n}\n\ngetEvent = ()=> {\n  this.props.dispatch({ type: \"GET_EVENTS\"});\n}\n\ngetGolferGoalTotal = () => {\n  this.props.dispatch({ type: \"GET_GOLFERS_GOAL_TOTAL\" });\n}\n\ngetGolferDonationTotal = () => {\n  this.props.dispatch({ type: \"GET_GOLFERS_DONATION_TOTAL\" });\n}\n\ngetPartnerPledgeTotal = () => {\n  this.props.dispatch({ type: \"GET_PARTNER_PLEDGE_TOTAL\" });\n}\n\ngetGoalInfo = () => {\n  this.props.dispatch({ type: \"GET_ENTIRE_GOAL_INFO\" });\n}\n\n  render(props) {\n\n    const { classes } = this.props;\n        \n    let golferGoalTotal = this.props.golferGoalTotal.total;\n    const golferDonationTotal = this.props.golferDonationTotal.total_received;\n    const normaliseGolferTotals = value => {\n        let normalizedNum = (Number(golferDonationTotal)) * 100 / (Number(golferGoalTotal))\n        if (normalizedNum > 100){\n          normalizedNum = 100;\n        }\n        return normalizedNum;\n    }\n\n    let entireGoal = this.props.entireGoal.goal;\n    const entireDonationTotal = Number(this.props.golferDonationTotal.total_received) + Number(this.props.partnerPledgeTotal.total);\n    const normaliseEntireTotals = value => {\n        let normalizedNum = (Number(entireDonationTotal)) * 100 / (Number(entireGoal))\n        if (normalizedNum > 100){\n          normalizedNum = 100;\n        }\n        return normalizedNum;\n    }\n\n    return (\n      <div>\n        <Nav />\n        <div className={classes.topMargin}>\n          <div className={classes.logo}>\n            <img src={HolesforHope} alt=\"100 Holes For Hope\" width='35%'  />\n          </div>\n          <h3 className={classes.event}>{dayjs(this.props.eventInfoReducer.date).format('MMMM DD YYYY')} | {this.props.eventInfoReducer.location}</h3>\n          <Grid container spacing={4}>\n\n            <Grid item sm={6}>\n              <div style={{marginLeft: '60%'}}>\n                <h4>{this.props.entireGoal.year} pledges ${parseInt(this.props.golferDonationTotal.total_received).toLocaleString()}</h4>\n                <LinearProgress value={normaliseGolferTotals(golferDonationTotal)} classes={{colorPrimary: classes.linearColorPrimary, barColorPrimary: classes.linearBarColorPrimary}}\n                color=\"primary\" variant=\"determinate\" style={{height:\"1.8rem\", width:\"75%\", borderRadius:\"2rem\"}}/>\n                <h4>Goal: ${parseInt(this.props.golferGoalTotal.total).toLocaleString()}</h4>\n              </div>\n              \n            </Grid>\n\n            <Grid item sm={6}>\n              <div style={{marginLeft: '5%'}}>\n              <h4>Total Raised in {this.props.entireGoal.year}: ${parseInt(entireDonationTotal).toLocaleString()}</h4>\n              <LinearProgress value={normaliseEntireTotals(entireDonationTotal)} classes={{colorPrimary: classes.linearColorPrimary, barColorPrimary: classes.linearBarColorPrimary}}\n              color=\"primary\" variant=\"determinate\" style={{height:\"1.8rem\", width:\"30%\", borderRadius:\"2rem\"}}/>\n              <h4>Goal: ${parseInt(entireGoal).toLocaleString()}</h4>\n              </div>\n            </Grid>\n          </Grid>\n            \n            <div className={classes.card}>\n              {this.props.videoReducer.map( (item) => {\n                return(\n                  <div >\n                    <h2>{item.title}</h2>\n                    <iframe src={item.url} width='880px' height='500px' />\n                    </div>\n                )\n              })}\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\nconst putReduxStateOnProps = (reduxStore) => ({\n  videoReducer: reduxStore.videoReducer,\n  eventInfoReducer: reduxStore.eventInfoReducer,\n  golferGoalTotal: reduxStore.goalReducer.golferGoalTotal,\n  golferDonationTotal: reduxStore.goalReducer.golferDonationTotal,\n  entireGoal: reduxStore.goalReducer.entireGoalInfo,\n  partnerPledgeTotal: reduxStore.goalReducer.partnerPledgeTotal,\n});\n\nUserPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(UserPage));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n  }\n\n\nexport class PhotosPageItem extends Component {\n\n    state = {\n        open: false,\n    };\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n      \n    \n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return(\n                <Fragment>\n                <img src={this.props.item.url} alt={this.props.item.description} width='240px' height='200px' style={{objectFit: 'scale-down'}} textAlign='center' onClick={this.handleClickOpen}/>\n                <Dialog\n                open={this.state.open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={this.handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <img src={this.props.item.url} alt={this.props.item.description} width='100%' />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                    close\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n                </Fragment>\n            )\n    }\n}\n\nexport default connect()(PhotosPageItem);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\n\n// Material UI\nimport {withStyles} from '@material-ui/core/styles';\nimport PhotosPageItem from '../PhotosPageItem/PhotosPageItem'\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n    topMargin: {\n        marginTop: '8%'\n    },\n    container: {\n        width: '90%',\n        margin: '0 auto',\n        justifyContent: 'center',\n        marginTop: '2rem'\n    }\n};\n\nclass PhotosPage extends Component {\n\n    componentDidMount() {\n        this.getPhotos()\n    }\n\n    getPhotos = () => {\n        this.props.dispatch({ type: 'GET_PHOTOS' })\n    }\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Nav />\n                <div className={classes.topMargin}>\n                    <h1>Event Photos</h1>\n                            <Grid container spacing={4} className={classes.container}>\n                            {this.props.photosReducer.map( (item) => {\n                            return(\n                                <Grid item key={item.id}>\n                                    <PhotosPageItem item={item} />\n                                </Grid>\n                                )\n                                })}\n                            </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    photosReducer: reduxStore.photosReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(PhotosPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\n\n// Material UI\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n    topMargin: {\n        marginTop: '8%'\n      },\n    container: {\n        width: '90%',\n        margin: '0 auto',\n        justifyContent: 'center',\n        marginTop: '1rem'\n    }\n};\n\nclass GolfersPage extends Component {\n\n    componentDidMount() {\n        this.getGolfers();\n    }\n\n    getGolfers = () => {\n        this.props.dispatch({ type: 'GET_ALL_GOLFERS' })\n    }\n    \n    viewGolfer = (id) => {\n        this.props.history.push(`/view/${id}`);\n    }\n    \n    render() {\n\n        const {classes} = this.props;\n        \n        return (\n            <div>\n                <Nav />\n                <div className={classes.topMargin}>\n                <h1>Golfers</h1>\n                <Grid container spacing={4} className={classes.container}>\n                    {this.props.golferReducer.map( item => {\n                    if(item.first_name === 'General'){\n                        return null;\n                    } else {\n                    return(\n                        <Grid item key={item.id}>\n                            <div>\n                                <h3 style={{margin: '0 auto', padding: '1rem'}}>{item.first_name} {item.last_name}</h3>\n                                <img src={item.img_url} alt={item.id} style={{objectFit: 'cover'}} onClick={() => this.viewGolfer(item.id)} width='240px' height=\"200px\"/>\n                            </div>\n                        </Grid>\n                        )\n                    }\n                        })}\n                </Grid>\n                </div>\n            </div>\n        )\n    }\n}\nconst putReduxStateOnProps = (reduxStore) => ({\n    golferReducer: reduxStore.golferReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(GolfersPage));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst styles =  {\n    card: {\n        width: '60%',\n        textAlign: 'center',\n        margin: ' 0 auto',\n        padding: '2rem',\n        backgroundColor: '#ffffff',\n        marginTop: '3rem'\n    },\n    topMargin: {\n        marginTop: '8%'\n    },\n    perBirdie: {\n        width: '50%',\n        margin: '0 auto'\n    },\n    introduction: {\n        textAlign: 'left',\n        width: '50%',\n        margin: '0 auto'\n    },\n    paragraph: {\n        textAlign: 'left',\n        width: '50%',\n        margin: '0 auto'\n    },\n    button: {\n        backgroundColor: 'rgb(180,151,89)',\n        color: '#ffffff',\n        marginTop: '1.75rem'\n    }\n}\n\nclass Pledge extends Component {\n    state = {\n        first_name: '',\n        last_name: '',\n        phone_number: '',\n        email: '',\n        golfer_id: '',\n        type: 'Flat',\n        amount: '',\n        max: ''\n    }\n\n    handleChangeFirstName = (e) => {\n        this.setState({\n            first_name: e.target.value\n        })\n    }\n    handleChangeLastName = (e) => {\n        this.setState({\n            last_name: e.target.value\n        })\n    }\n    handleChangePhone = (e) => {\n        this.setState({\n            phone_number: e.target.value\n        })\n    }\n    handleChangeEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n    handleChangePledging = (e) => {\n        this.setState({\n            golfer_id: e.target.value\n        })\n    }\n    handleChangeType = (e) => {\n        this.setState({\n            type: e.target.value\n        })\n    }\n    handleChangeMax = (e) => {\n        this.setState({\n            max: e.target.value\n        })\n    }\n    handleChangeAmount = (e) => {\n        this.setState({\n            amount: e.target.value\n        })\n    }\n    handleSubmit = () => {\n        if (this.state.phone_number.length < 10 || !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email) || \n            this.state.first_name === '' || this.state.last_name === '' || this.state.phone_number === '' || \n            this.state.email === '' || this.state.amount === '' || this.state.golfer_id === ''){\n            alert('Please fill out the form completely')\n        } else {\n            if (/^\\d{3}-\\d{3}-\\d{4}$/.test(this.state.phone_number) || /^\\(\\d{3}\\)-\\d{3}-\\d{4}$/.test(this.state.phone_number) || \n            /^\\(\\d{3}\\)\\d{3}-\\d{4}$/.test(this.state.phone_number) || /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/.test(this.state.phone_number) || \n            /^\\(\\d{3}\\)\\s\\d{3}\\s\\d{4}$/.test(this.state.phone_number)) {\n            this.state.phone_number = this.state.phone_number.replace(/[()\\\\s-]+/g, \"\")\n            this.props.dispatch({ type: 'POST_PLEDGE', payload: {\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                phone_number: this.state.phone_number,\n                email: this.state.email,\n                golfer_id: this.state.golfer_id,\n                type: this.state.type,\n                amount: this.state.amount,\n                max: this.state.max\n                }})\n                this.setState({\n                    first_name: '',\n                    last_name: '',\n                    phone_number: '',\n                    email: '',\n                    golfer_id: '',\n                    type: '',\n                    amount: '',\n                    max: '',\n                }) \n                alert('Thank you for your donation!  Please check your email for confirmation.')\n        } \n        else {\n            console.log(this.state)\n            this.props.dispatch({ type: 'POST_PLEDGE', payload: {\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                phone_number: this.state.phone_number,\n                email: this.state.email,\n                golfer_id: this.state.golfer_id,\n                type: this.state.type,\n                amount: this.state.amount,\n                max: this.state.max\n                \n             }})\n            this.setState({\n                first_name: '',\n                last_name: '',\n                phone_number: '',\n                email: '',\n                golfer_id: '',\n                type: '',\n                amount: '',\n                max: '',\n            }) \n            alert('Thank you for your donation!  Please check your email for confirmation.')\n        } \n        }  \n    }\n\n    componentDidMount() {\n        this.getGolfers();\n    }\n    getGolfers = () => {\n        this.props.dispatch({ type: 'GET_ALL_GOLFERS' })\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        const perBirdiePledge = this.state.type === 'Per Birdie' ? (\n                <div className={classes.perBirdie}>\n                    <TextField\n                        label=\"Per birdie donation\"\n                        variant=\"outlined\"\n                        type='number'\n                        onChange={this.handleChangeAmount}\n                        value={this.state.amount}\n                        helperText=\"Eagles will count as 2 Birdies. Minimum pledge $1.00.\"\n                        style={{width: '50%', marginTop: '5%'}}\n                    />\n                    <br/>\n                    <TextField\n                        label=\"Maxium donation\"\n                        variant=\"outlined\" \n                        type='number' \n                        onChange={this.handleChangeMax} \n                        value={this.state.max}\n                        helperText=\"This is the amount you will be billed if your per birdie pledge amount multiplied by the golfers total number of birdies\n                            exceeds the maximum donation you set.\"\n                        style={{width: '50%', marginTop: '5%'}}\n                    />\n                </div>\n        ) : (\n            <Fragment>  \n            </Fragment>\n        )\n\n        const flatPledge = this.state.type === 'Flat' ? (\n            <div>\n                <TextField\n                label=\"Pledge Total\"\n                variant=\"outlined\"\n                type='number'\n                onChange={this.handleChangeAmount}\n                value={this.state.amount}\n                helperText=\"Minimum pledge $1.00.\"\n                />\n            </div>\n        ) : (\n            <Fragment>\n            </Fragment>\n        )\n        \n        return (\n            <div>\n                <Nav />\n                <div className={classes.topMargin}>\n                    <h1>Pledge</h1>\n                    <div className={classes.introduction}>\n                        <p>\n                            By filling out the form below, you are making a commitment to support the golfer of your choice in their 100 Holes for HOPE marathon. \n                            You will receive an e-mail after the event with a summary of information on your golfer's performance \n                            and specific instructions on how to honor this pledge directly to his/her pledge total.\n                            <br/><br/>\n                            In order to keep the pace of play going and to ensure that the golfers can play a full 100 holes in daylight, \n                            we have modified some of the traditional rules of golf. If a ball is anywhere within a flag stick from the hole, \n                            that ball counts as \"in the hole\". Please be aware of this when pledging per birdie. An eagle will be worth two birdie pledges.\n                        </p>\n                    </div>\n\n                    <Card className={classes.card}>\n                            <div>\n                                <h4>Name</h4>\n                            </div>\n                            <TextField \n                                label=\"First Name\"\n                                variant=\"outlined\"\n                                style={{marginRight: 10}}\n                                placeholder='First Name'\n                                type=\"text\"\n                                onChange={this.handleChangeFirstName} \n                                value={this.state.first_name} \n                            />\n                            <TextField \n                                label=\"Last Name\"\n                                variant=\"outlined\"\n                                style={{marginLeft: 10}}\n                                placeholder='Last Name'\n                                type=\"text\" \n                                onChange={this.handleChangeLastName} \n                                value={this.state.last_name}\n                            />\n                            <div>\n                                <h4>Phone Number</h4>\n                            </div>\n                            <TextField\n                                label=\"Phone Number\"\n                                variant=\"outlined\"\n                                placeholder='Phone Number'\n                                type='text' \n                                onChange={this.handleChangePhone} \n                                value={this.state.phone_number} \n                            />\n                            <div>\n                                <h4>Email</h4>\n                            </div>\n                            <TextField\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                placeholder='Email'\n                                type=\"text\"\n                                onChange={this.handleChangeEmail}\n                                value={this.state.email}\n                            />\n                            <div>\n                                <h4>Golfer You are Pledging to</h4>\n                            </div>\n                            <div style={{marginBottom: '1.5rem'}}>\n                                <Select \n                                    variant=\"outlined\"\n                                    onChange={this.handleChangePledging}\n                                    >\n                                    {this.props.golferReducer.map( (item) => {\n                                    return(\n                                        <MenuItem key={item.id} value={item.id}>\n                                            {item.first_name} {item.last_name}\n                                        </MenuItem>)\n                                    })}\n                                </Select>\n                            </div>\n                            <div className={classes.paragraph}>\n                                <p>\n                                    Please indicate your pledge below. After the event and once scores have been calculated, you will be contacted with a total amount \n                                    and payment can be made at that time.\n                                </p>\n                            </div>\n                    <div>\n                        <h4>Pledge Type</h4>\n                    </div>\n                    <div>\n                        <Select\n                            variant=\"outlined\"\n                            onChange={this.handleChangeType} \n                            value={this.state.type}\n                        >\n                            <MenuItem value=\"Flat\">Flat</MenuItem>\n                            <MenuItem value=\"Per Birdie\">Per Birdie</MenuItem>\n                        </Select>\n                    </div>\n                \n                    <br/>\n                    {perBirdiePledge}\n                    <br/>\n                    {flatPledge}\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.button}\n                            onClick={this.handleSubmit}\n                        >\n                            Pledge\n                        </Button>\n                    </div>\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\nconst putReduxStateOnProps = (reduxStore) => ({\n    golferReducer: reduxStore.golferReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(Pledge));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\n\n\nconst styles =  {\n    card: {\n        width: '60%',\n        textAlign: 'center',\n        margin: '0 auto',\n        padding: '2rem',\n        marginTop: '4%',\n        color: '#253155'\n    },\n    topMargin: {\n        marginTop: '8%'\n    }\n}\n\nclass ParntersPage extends Component {\n\n    componentDidMount() {\n        this.getSponsor();\n    }\n    getSponsor = () => {\n        this.props.dispatch({ type: 'GET_PUBLIC_SPONSOR' })\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        let currentLevel = null;\n\n        return (\n            <div>\n                <Nav />\n                <div className={classes.topMargin}>\n                    <h1>Thank You 2019 Partners</h1>\n                    <Card className={classes.card}>\n                        <p style={{textAlign:\"center\"}}>If you are interested in sponsorship opportunties, please reach out to Maggie \n                            Sutton at msutton@pgahq.com, or click <a href=\"https://2974087d-4c0d-4b25-8875-039fee4fd083.filesusr.com/ugd/823de7_68d1b9577dab4a6b8312c12061639400.pdf\" \n                            target=\"_blank\">here</a> to download sponsorship information.\n                        </p>\n                            {this.props.publicSponsorReducer.map(partner => {\n                                if(partner.sponsor_level === currentLevel){\n                                    return (\n                                            <span item key={partner.id} style={{display: 'inline-block'}}>\n                                                <img src={partner.img_url} alt={partner.name}/>\n                                            </span>\n                                    )\n                                } \n                                else {\n                                    currentLevel = partner.sponsor_level;\n                                    return (\n                                        <Fragment>\n                                        <div key={partner.id}>\n                                            <h2 style={{fontSize: '2rem', margin: '1rem'}}>{partner.title} - ${parseInt(partner.amount).toLocaleString()}</h2>\n                                        </div>\n                                        <div style={{display: 'inline-block'}}>\n                                            <img src={partner.img_url} alt={partner.name} />\n                                        </div>\n                                        </Fragment>\n                                    )\n                                }\n                            })}\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\nconst putReduxStateOnProps = (reduxStore) => ({\n    publicSponsorReducer: reduxStore.publicSponsorReducer,\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(ParntersPage));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '65%',\n        margin: '0 auto'\n    },\n    paper: {\n        padding: theme.spacing.unit,\n        textAlign: 'center',\n        color: '#253055',\n        margin: theme.spacing(2),\n        backgroundColor: '#ffffff'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    topMargin: {\n        marginTop: '8%'\n    },\n    button: {\n        backgroundColor: '#b49759',\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        width: '64%', \n        color: '#FFFFFF'\n    }\n});\n\nclass ContactPage extends Component {\n\n    state = {\n        email: '',\n        name: '',\n        subject: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        this.getAddress();\n        this.getContact();\n    }\n\n    getAddress = () => {\n        this.props.dispatch({ type: 'GET_ADDRESS' })\n    }\n    getContact = () => {\n        this.props.dispatch({ type: 'GET_CONTACT' })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email)){\n            alert('Please fill in a valid email')\n        } else if (this.state.name === '' || this.state.subject === '' || this.state.body === '' || this.state.email === ''){\n            alert('Please fill in text field')\n        } else {\n            this.props.dispatch({ type: 'SEND_EMAIL', payload: this.state });\n            this.setState({\n                email: '',\n                name: '',\n                subject: '',\n                body: ''\n            })\n            alert('Your email has been sent successfully.')\n        }\n    }\n\n    adjustLayout(string) {\n        let phone = string.toString()\n        let area = phone.slice(0,3)\n        let first = phone.slice(3,6)\n        let last = phone.slice(6,10)\n        return string.replace(/\\d{10}/g, ` (${area}) ${first}-${last}`); \n    }\n\n    render(props) {\n\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <Nav />\n                <div className={classes.topMargin}>\n                    <h1>CONTACT</h1>\n                    <div className={classes.root}>\n                        <Grid container spacing={2}>\n                            <Grid item xs>\n                            <form>\n                                <Paper className={classes.paper}>\n                                    <TextField\n                                        required\n                                        id=\"email-input\"\n                                        label=\"Email\"\n                                        placeholder=\"your email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChangeFor('email')}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        style={{width: '30%'}}\n                                    />\n                                    <TextField\n                                        required\n                                        id=\"name-input\"\n                                        label=\"Name\"\n                                        placeholder=\"your name\"\n                                        value={this.state.name}\n                                        onChange={this.handleInputChangeFor('name')}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        style={{width: '30%'}}\n                                    />\n                                    <TextField\n                                        id=\"subject-input\"\n                                        label=\"Subject\"\n                                        placeholder=\"subject of email\"\n                                        value={this.state.subject}\n                                        onChange={this.handleInputChangeFor('subject')}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        style={{width: '64%'}}\n                                    />\n                                    <TextField\n                                        id=\"email-body-input\"\n                                        label=\"Message\"\n                                        multiline\n                                        rows=\"8\"\n                                        rowsMax=\"10\"\n                                        value={this.state.body}\n                                        onChange={this.handleInputChangeFor('body')}\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        style={{width: '64%'}}\n                                    />\n                                <div>\n                                    <Button variant=\"contained\" className={classes.button} onClick={(event) => this.handleSubmit(event)}>\n                                        Send Email\n                                    </Button>\n                                </div>\n                                </Paper>\n                            </form>\n                            </Grid>\n                            <Grid item xs>\n                                {this.props.addressPublicReducer.map( (item) => {\n                                    return(\n                                        <Paper key= {item.id} className={classes.paper}>\n                                            <h3>Address</h3>\n                                            <p>{item.street}</p>\n                                            <p>{item.city}, {item.state} {item.zip}</p>\n                                            <p>info@minnesotapga.com</p><br/>\n\n                                            <p>Tel:{this.adjustLayout(item.phone)}</p>\n                                            <p>Fax:{this.adjustLayout(item.fax)}</p>\n                                        </Paper>\n                                    )\n                                })}\n                                {this.props.contactPublicReducer.map( (item) => {\n                                    return(\n                                        <Paper key= {item.id} className={classes.paper}>\n                                            <h3>Contact</h3>\n                                            <p>For any additional information, please contact:</p>\n                                            <h3>{item.name}</h3>\n                                            <p>{item.email}</p>\n                                        </Paper>\n                                    )\n                                })}\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    addressPublicReducer: reduxStore.addressPublicReducer,\n    contactPublicReducer: reduxStore.contactPublicReducer\n\n});\n\nContactPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(ContactPage));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n//Material UI Stuff\nimport Button from '@material-ui/core/Button'\n\nconst LogOutButton = props => (\n  <Button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n    style={{color: \"white\"}}\n  >\n    Log Out\n  </Button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport logo from './100HolesforHope.png';\n\n// Material UI stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles =  {\n  buttonLeft: {\n    float: 'left'\n  },\n  buttonRight: {\n    marginTop: '50px'\n  },\n  buttonStyling: {\n    textDecoration: 'none',\n    color: 'white'\n  }\n};\n\nclass AdminNav extends Component{\n  render(){\n\n    const { classes } = this.props;\n\n    return (\n      <AppBar style={{backgroundColor: '#253155'}}>\n        <Grid container spacing={4}>\n          <Grid item className={classes.buttonLeft} sm={3}>\n            <div style={{width: 300}}>\n              <Button>\n                <Link to=\"/admin\">\n                  <img src={logo} alt=\"100 Holes For Hope\" width='200px' height='75px' />\n                </Link>\n              </Button>\n            </div>\n          </Grid>\n          <Grid item className={classes.buttonRight} sm={9}>\n          <span>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin\" className={classes.buttonStyling}>\n                Home\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin/about\" className={classes.buttonStyling}>\n                About\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin/photos\" className={classes.buttonStyling}>\n                Photos\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin/golfers\" className={classes.buttonStyling}>\n                Golfers\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin/pledges\" className={classes.buttonStyling}>\n                Donations\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin/partners\" className={classes.buttonStyling}>\n                Partners\n              </Link>\n            </Button>\n            <Button>\n              <Link className=\"nav-link\" to=\"/admin/contact\" className={classes.buttonStyling}>\n                Contact\n              </Link>\n            </Button>\n            <Button>\n              <Link to=\"/admin/password\"className={classes.buttonStyling}>\n                Change Password\n              </Link>\n            </Button>\n            <LogOutButton />\n            </span>\n          </Grid>\n        </Grid>\n      </AppBar>\n    )\n  }\n    \n};\n  \n  // Instead of taking everything from state, we just want the user\n  // object to determine if they are logged in\n  // if they are logged in, we show them a few more links \n  // if you wanted you could write this code like this:\n  // const mapStateToProps = ({ user }) => ({ user });\n  const mapStateToProps = state => ({\n    user: state.user,\n  });\n  \n  export default connect(mapStateToProps)(withStyles(styles)(AdminNav));  ","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport dayjs from 'dayjs';\nimport AdminNav from '../AdminNav/AdminNav';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles =  {\n    topMargin: {\n        marginTop: '8%'\n    },\n    textField: {\n        marginBottom: '1rem'\n    },\n    center: {\n        textAlign: 'center'\n    },\n    container: {\n        textAlign: 'center',\n        width: '60%',\n        margin: '0 auto'\n    },\n    primaryButton: {\n        backgroundColor: '#b49759',\n        color: '#ffffff',\n        margin: '.5rem',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#b49759'\n            }\n    },\n    secondaryButton: {\n        backgroundColor: '#253155',\n        color: '#ffffff',\n        margin: '.5rem',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#253155'\n            }\n    }\n}\n\nclass AdminHomePage extends Component {\n\n    state = {\n        editLocation: false,\n        editDate: false,\n        editGoal: false,\n        addVideo: false,\n        location: '',\n        date: '',\n        videoUrl: '',\n        videoTitle: '',\n        goalAmount: '',\n        goalYear: ''\n    }\n\n    componentDidMount(){\n        this.props.dispatch({ type: 'GET_EVENT_INFO' })\n        this.props.dispatch({ type: 'GET_VIDEOS_ADMIN' })\n        this.props.dispatch({ type: 'GET_ENTIRE_GOAL_INFO' })\n    }\n\n    editLocation = () => {\n        if(this.state.editLocation === false){\n            this.setState({\n                editLocation: true,\n                location: this.props.eventInfoReducer.location\n            })\n        } else {\n            this.props.dispatch({type: 'EDIT_LOCATION', payload: {location: this.state.location, id: this.props.eventInfoReducer.id}})\n            this.setState({\n                editLocation: false\n            })\n        }\n    }\n\n    editDate = () => {\n        if(this.state.editDate === false){\n            this.setState({\n                editDate: true\n            })\n        } else {\n            this.props.dispatch({type: 'EDIT_DATE', payload: {date: this.state.date, id: this.props.eventInfoReducer.id}})\n            this.setState({\n                editDate: false\n            })\n        }\n    }\n\n    editGoal = () => {\n        if(this.state.editGoal === false){\n            this.setState({\n                editGoal: true,\n                goalAmount: this.props.entireGoal.goal,\n                goalYear: this.props.entireGoal.year\n            })\n        } else {\n            this.props.dispatch({ type: 'EDIT_GOAL_INFO', \n                payload: {goalYear: this.state.goalYear, goalAmount: this.state.goalAmount, id: this.props.entireGoal.id } \n            })\n            this.setState({\n                editGoal: false\n            })\n        }\n    }\n\n    addVideo = () => {\n        if(this.state.addVideo === false){\n            this.setState({\n                addVideo: true\n            })\n        } else {\n            this.props.dispatch({type: 'ADD_VIDEO', payload: {url: this.state.videoUrl, title: this.state.videoTitle}})\n            this.setState({\n                addVideo: false\n            })\n        }\n    }\n\n    deleteVideo = (id) => {\n        this.props.dispatch({type: 'DELETE_VIDEO', payload: id})\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    cancelLocationSave = () => {\n        this.setState({\n            editLocation: false\n        })\n    }\n\n    cancelDateSave = () => {\n        this.setState({\n            editDate: false\n        })\n    }\n\n    cancelGoalSave = () => {\n        this.setState({\n            editGoal: false\n        })\n    }\n\n    cancelVideoAdd = () => {\n        this.setState({\n            addVideo: false\n        })\n    }\n    \n    render(props) {\n\n        const { classes } = this.props;\n\n        const editLocation = this.state.editLocation === false ? (\n            <Fragment>\n                <h4>Event location: {this.props.eventInfoReducer.location}</h4>\n                    <Button\n                        onClick={this.editLocation}\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                    >\n                        Edit\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                    <TextField\n                        label=\"Location\"\n                        variant=\"outlined\"\n                        type=\"text\" \n                        value={this.state.location}\n                        onChange={this.handleInputChangeFor('location')}\n                        style={{width: '30%'}}\n                    />\n                    <div>\n                        <Button\n                            onClick={this.cancelLocationSave}\n                            variant=\"contained\"\n                            className={classes.secondaryButton}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            onClick={this.editLocation}\n                            variant=\"contained\"\n                            className={classes.primaryButton}\n                        >\n                            Save\n                        </Button>\n                    </div>\n            </Fragment>\n        )\n\n        const editGoal = this.state.editGoal === false ? (\n            <Fragment>\n                <h4>Goal Year: {this.props.entireGoal.year} | Goal Amount: ${parseInt(this.props.entireGoal.goal).toLocaleString()}</h4>\n                    <Button\n                        onClick={this.editGoal}\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                    >\n                        Edit\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <TextField\n                    label=\"Year of event\"\n                    variant=\"outlined\"\n                    type=\"text\" \n                    value={this.state.goalYear}\n                    onChange={this.handleInputChangeFor('goalYear')}\n                    className={classes.textField}\n                />\n                <br/>\n                <TextField\n                    label=\"Goal amount\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    value={this.state.goalAmount}\n                    onChange={this.handleInputChangeFor('goalAmount')}\n                    className={classes.textField}\n                />\n                <div>\n                    <Button\n                        onClick={this.cancelGoalSave}\n                        variant=\"contained\"\n                        className={classes.secondaryButton}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={this.editGoal}\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Fragment>\n        )\n\n        const editDate = this.state.editDate === false ? (\n            <Fragment>\n                <h4>Date of event: {dayjs(this.props.eventInfoReducer.date).format('MMMM DD YYYY')}</h4>\n                    <Button\n                        onClick={this.editDate}\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                    >\n                        Edit\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                    <TextField \n                        label=\"Event Date\"\n                        variant=\"outlined\"\n                        type=\"date\"\n                        value={this.state.date}\n                        onChange={this.handleInputChangeFor('date')}\n                        InputLabelProps={{\n                            shrink: true,\n                            }}\n                    />\n                    <div>\n                        <Button\n                            onClick={this.cancelDateSave}\n                            variant=\"contained\"\n                            className={classes.secondaryButton}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            onClick={this.editDate}\n                            variant=\"contained\"\n                            className={classes.primaryButton}\n                        >\n                            Save\n                        </Button>\n                    </div>\n            </Fragment>\n        )\n\n        const addVideo = this.state.addVideo === false ? (\n            <Fragment>\n                    <Button\n                    onClick={this.addVideo}\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginTop: 30}}\n                    >\n                        Add Video\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <TextField\n                    label=\"Video Title\"\n                    variant=\"outlined\"\n                    type=\"text\" \n                    value={this.state.videoTitle}\n                    onChange={this.handleInputChangeFor('videoTitle')}\n                    className={classes.textField}\n                />\n                <br/>\n                <TextField\n                    label=\"Video URL\"\n                    variant=\"outlined\"\n                    type=\"text\" \n                    value={this.state.videoUrl}\n                    onChange={this.handleInputChangeFor('videoUrl')}\n                    className={classes.textField}\n                />\n                <div>\n                    <Button\n                        onClick={this.cancelVideoAdd}\n                        variant=\"contained\"\n                        className={classes.secondaryButton}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={this.addVideo}\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <h1>HOME</h1>\n                    <div className={classes.container}>\n                        <div>\n                            {editLocation}\n                        </div>\n                        <div>\n                            {editDate}\n                        </div>\n                        <div>\n                            {editGoal}\n                        </div>\n                    </div>\n                    <div style={{textAlign:'center'}}>\n                        {addVideo}\n                    </div>\n                    {this.props.videoReducer.map( (item) => {\n                    return(\n                        <div className={classes.center}key={item.id} sm={6}>\n                            <h2>{item.title}</h2>\n                            <iframe src={item.url} width='450px' height='250px'  />\n                            <br />\n                            <div style={{textAlign:'center'}}>\n                                <Button\n                                    onClick={() => this.deleteVideo(item.id)}\n                                    variant=\"contained\"\n                                    className={classes.secondaryButton}\n                                >\n                                    Delete\n                                </Button>\n                            </div>\n                        </div>\n                    )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    eventInfoReducer: reduxStore.eventInfoReducer,\n    videoReducer: reduxStore.videoReducer,\n    entireGoal: reduxStore.goalReducer.entireGoalInfo\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminHomePage));\n","import React, { Component, Fragment } from 'react';\nimport AdminNav from '../AdminNav/AdminNav';\nimport { connect } from 'react-redux';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles =  {\n    topMargin: {\n        marginTop: '8%'\n    },\n    center: {\n        textAlign: 'center'\n    },\n    primaryButton: {\n        backgroundColor: '#b49759', \n        color: '#ffffff',\n        marginTop: 10,\n        '&:hover': {\n            backgroundColor: '#b49759'\n        }\n    },\n    secondaryButton: {\n        backgroundColor: '#253155', \n        color: '#ffffff',\n        marginTop: 10,\n        '&:hover': {\n            backgroundColor: '#253155'\n        }\n    },\n    paragraph: {\n        width: 600, \n        margin: '0 auto'\n    },\n    textArea: {\n        width: 600\n    }\n}\n\nconst dropStyles ={\n    width: \"200px\",\n    height: \"50px\",\n    border: \"1px solid black\",\n    \"background-color\": \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto',\n    marginTop: 10\n}\n\nclass AdminAboutPage extends Component {\n\n    state ={ \n        mission: '',\n        title: '',\n        url: '',\n        bio:'',\n        id: '',\n        editMission: false,\n        addFoundation: false,\n    }\n\n    componentDidMount(){\n        this.props.dispatch({type: 'GET_ADMIN_MISSION'});\n        this.props.dispatch({ type: 'GET_ADMIN_FOUNDATION'});\n    }\n\n    cancelMissionSave = () => {\n        this.setState({\n            editMission: false,\n            mission: ''\n        })\n    }\n\n    cancelAddFoundation = () => {\n        this.setState({\n            addFoundation: false,\n            title: '',\n            bio: ''\n        })\n    }\n\n    editMission = () => {\n        if(this.state.editMission === false){\n            this.setState({\n                editMission: true,\n                mission: this.props.missionReducer.about\n            })\n        } else {\n            this.props.dispatch({type: 'EDIT_ADMIN_MISSION', payload: {mission: this.state.mission, id: this.props.missionReducer.id}})\n            this.setState({\n                editMission: false\n            })\n        }\n    }\n\n    addFoundation = () => {\n        this.setState({\n            addFoundation: true\n        })\n    }\n\n    deleteFoundation = (id) => {\n        this.props.dispatch({type: 'DELETE_FOUNDATION', payload: id})\n    }\n\n    saveAddFoundation = () => {\n        this.props.dispatch({ type: 'ADD_FOUNDATION', payload: {\n            title: this.state.title,\n            bio: this.state.bio,\n            image: this.state.url\n        }})\n        this.setState({\n            addFoundation: false,\n            title: '',\n            bio: '',\n            image: ''\n        })\n    }\n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    viewPartner = (id) => {\n        this.props.history.push(`/admin/foundation/${id}`);\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        const editMission = this.state.editMission === false ? (\n            <Fragment>\n                <div className={classes.paragraph}>\n                    <p>{this.props.missionReducer.about}</p>\n                </div>\n                <div className={classes.center}>\n                    <Button\n                    variant=\"contained\"\n                    onClick={this.editMission}\n                    className={classes.primaryButton}\n                    >\n                        Edit\n                    </Button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div className={classes.center}>\n                    <TextField\n                    label=\"Mission\"\n                    multiline\n                    variant=\"outlined\"\n                    type=\"text\"\n                    rows=\"6\"\n                    className={classes.textArea}\n                    value={this.state.mission}\n                    onChange={this.handleInputChangeFor('mission')}\n                    />\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        className={classes.secondaryButton}\n                        style={{marginLeft: '10px'}}\n                        onClick={this.cancelMissionSave}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                        style={{marginLeft: '10px'}}\n                        onClick={this.editMission}\n                        >\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        )\n\n        const uploadOptions = {\n            server: 'https://lit-eyrie-42982.herokuapp.com/',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div class=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n        const addFoundation = this.state.addFoundation === false ? (\n            <Fragment>\n                <div className={classes.center}>\n                    <Button\n                    variant=\"contained\"\n                    className={classes.primaryButton}\n                    onClick={this.addFoundation}\n                    >\n                        Add Foundation\n                    </Button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div className={classes.center}>\n                    <div>\n                        <TextField\n                        label=\"Title\"\n                        variant=\"outlined\"\n                        type=\"text\"\n                        value={this.state.title}\n                        onChange={this.handleInputChangeFor('title')}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                        label=\"Bio\"\n                        variant=\"outlined\"\n                        multiline\n                        type=\"text\"\n                        rows=\"6\"\n                        style={{marginTop: '10px'}}\n                        className={classes.textArea}\n                        value={this.state.bio}\n                        onChange={this.handleInputChangeFor('bio')}\n                        />\n                    </div>\n                    <div>\n                    <DropzoneS3Uploader\n                        children={innderDropElement}\n                        onFinish={this.handleFinishedUpload}\n                        s3Url={s3Url}\n                        style={dropStyles}\n                        maxSize={1024 * 1024 * 5}\n                        upload={uploadOptions}\n                    />\n                    </div>\n                    <Button\n                    variant=\"contained\"\n                    style={{marginRight: '10px'}}\n                    className={classes.secondaryButton}\n                    onClick={this.cancelAddFoundation}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                    variant=\"contained\"\n                    style={{marginLeft: '10px'}}\n                    className={classes.primaryButton}\n                    onClick={this.saveAddFoundation}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Fragment>\n        )\n\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <h1 style={{textAlign:'center', fontSize:'6rem'}}>About</h1>\n                    <div>\n                        {editMission}\n                    </div>\n                    <br />\n                    <div>\n                        {addFoundation}\n                    </div>\n                    <div className={classes.center}>\n                        {this.props.foundationReducer.map( (item) => {\n                        return(\n                            <div key={item.id}>\n                            <h2>{item.name}</h2>\n                            <img src={item.url} alt={item.name} width='260px'  />\n                            <p className={classes.paragraph}>{item.bio}</p>\n                            <Button\n                                variant=\"contained\"\n                                style={{marginRight: '10px'}}\n                                className={classes.secondaryButton}\n                                onClick={() => this.deleteFoundation(item.id)}\n                            >\n                                Delete\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                style={{marginLeft: '10px'}}\n                                className={classes.primaryButton}\n                                onClick={() => this.viewPartner(item.id)}\n                            >\n                                Edit\n                            </Button>\n                            </div>\n                        )\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    missionReducer: reduxStore.missionReducer,\n    foundationReducer: reduxStore.foundationReducer\n  });\n\n  export default connect(putReduxStateOnProps)(withStyles(styles)(AdminAboutPage));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport Grid from '@material-ui/core/grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles =  {\n    card: {\n        width: 'auto',\n        height: 'auto',\n        padding: 80,\n        margin: 40,\n        textAlign: 'center'\n    },\n    topMargin: {\n        marginTop: '100px'\n    }\n}\n\nconst dropStyles ={\n    width: \"200px\",\n    height: \"50px\",\n    border: \"1px solid black\",\n    \"background-color\": \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto'\n}\n\n\nclass AdminPhotosPage extends Component {\n\n    state = {\n        description: '',\n        url: '',\n        addPhoto: false,\n    }\n\n    componentDidMount(){\n        this.props.dispatch({ type: 'GET_ADMIN_PHOTOS'})\n    }\n\n    addPhoto = () => {\n        this.setState({\n            addPhoto: true\n        })\n    }\n\n    cancelAddPhoto = () => {\n        this.setState({\n            addPhoto: false,\n            description: ''\n        })\n    }\n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    saveAddPhoto = () => {\n        this.props.dispatch({ type: 'ADMIN_ADD_PHOTO', payload: {\n            description: this.state.description,\n            url: this.state.url\n        }})\n        this.setState({\n            description: '',\n            url: '',\n            addPhoto: false\n        })\n    }\n\n    deletePhoto = (id) =>{\n        this.props.dispatch({ type: 'ADMIN_DELETE_PHOTO', payload: id})\n    } \n\n    render() {\n\n        const { classes } = this.props;\n\n        const uploadOptions = {\n            server: 'https://lit-eyrie-42982.herokuapp.com/',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div class=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n        const addPhoto = this.state.addPhoto === false ? (\n            <Fragment>\n                    <Button\n                    onClick={this.addPhoto}\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                    >\n                        Add Photo\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div style={{ marginBottom: 20}}>\n                    <TextField\n                    label=\"Description\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    value={this.state.description}\n                    onChange={this.handleInputChangeFor('description')}\n                    />\n                </div>\n                <div>\n                <DropzoneS3Uploader\n                    children={innderDropElement}\n                    onFinish={this.handleFinishedUpload}\n                    s3Url={s3Url}\n                    style={dropStyles}\n                    maxSize={1024 * 1024 * 5}\n                    upload={uploadOptions}\n                />\n                </div>\n\n                <Button\n                onClick={this.cancelAddPhoto}\n                variant=\"contained\"\n                style={{backgroundColor: '#253155', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Cancel\n                </Button>\n                <Button\n                onClick={this.saveAddPhoto}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <h1>Photos</h1>\n                    <div className={classes.card}>\n                        <Grid container spacing={3} justify='center'>\n                        <div style={{ textAlign:'center', marginBottom:20}}>\n                            {addPhoto}\n                        </div>\n                            <Grid container spacing={3} justify='center'>\n                            {this.props.photosReducer.map( (item) => {\n                            return(\n                                <Grid item>\n                                    <div key={item.id}>\n                                    <img src={item.url} alt={item.description} width='220px' height='200px' style={{objectFit: 'cover'}} textAlign='center' />\n                                    <br />\n                                    <Button\n                                    onClick={() => this.deletePhoto(item.id)}\n                                    variant=\"contained\"\n                                    style={{backgroundColor: '#253155', color: '#ffffff', marginTop: '5px'}}\n                                    >\n                                        Delete\n                                    </Button>\n                                    </div>\n                                </Grid>\n                                )\n                            })}\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    photosReducer: reduxStore.photosReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminPhotosPage));\n","import React, { Component, Fragment } from 'react';\nimport AdminNav from '../AdminNav/AdminNav';\nimport { connect } from 'react-redux';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\n\n//Material UI Stuff\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '70%',\n        margin: '0 auto'\n    },\n    paper: {\n        padding: theme.spacing.unit,\n        textAlign: 'center',\n        width: '40%',\n        color: '#253055',\n        margin: '0 auto',\n    },\n    topMargin: {\n        marginTop: '8%'\n    },\n    addGolfer: {\n        textAlign: 'center',\n    },\n    addButton: {\n        backgroundColor: '#b49759',\n        margin: '.5rem',\n        color: '#FFFFFF',\n        '&:hover': {\n            backgroundColor: '#b49759'\n        }\n    },\n    textField: {\n        margin: '1rem'\n    },\n    cancelButton: {\n        backgroundColor: '#253155',\n        margin: '.5rem',\n        color: '#FFFFFF',\n        '&:hover': {\n            backgroundColor: '#253155'\n        }\n    },\n    saveButton: {\n        backgroundColor: '#b49759',\n        margin: '.5rem',\n        color: '#FFFFFF',\n        '&:hover': {\n            backgroundColor: '#b49759'\n        }\n    },\n    golfer: {\n        textAlign: 'center'\n    }\n})\n\nconst dropStyles = {\n    width: \"29%\",\n    border: \"1px solid black\",\n    backgroundColor: \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto',\n    marginTop: '1rem',\n    marginBottom: '1rem'\n}\n\nexport class AdminGolfersPage extends Component {\n\n    state = {\n        first: '',\n        last: '',\n        bio: '',\n        purpose: '',\n        goal: '',\n        url: '',\n        addGolfer: false\n    }\n\n    addGolfer = () => {\n        this.setState({\n            addGolfer: true\n        })\n    }\n\n    cancelAddGolfer = () => {\n        this.setState({\n            addGolfer: false,\n            first: '',\n            last: '',\n            bio: '',\n            purpose: '',\n            goal: '',\n            url: ''\n        })\n    }\n\n    saveAddGolfer = () => {\n        this.props.dispatch({ type: 'ADMIN_ADD_GOLFER', payload: {\n            first: this.state.first,\n            last: this.state.last,\n            bio: this.state.bio,\n            purpose: this.state.purpose,\n            goal: this.state.goal,\n            url: this.state.url\n        }})\n        this.setState({\n            first: '',\n            last: '',\n            bio: '',\n            purpose: '',\n            goal: '',\n            url: '',\n            addGolfer: false\n        })\n    }\n\n    removeGolfer = (id) =>{\n        this.props.dispatch({ type: 'ADMIN_DELETE_GOLFER', payload: id})\n    } \n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    componentDidMount(){\n        this.props.dispatch({type: 'GET_ADMIN_GOLFERS'})\n    }\n\n    viewGolfer = (id) => {\n        this.props.history.push(`/admin/golfers/${id}`);\n    }\n\n    render(props) {\n\n        const { classes } = this.props;\n\n        const uploadOptions = {\n            server: 'https://lit-eyrie-42982.herokuapp.com/',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div class=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n        const addGolfer = this.state.addGolfer === false ? (\n            <div className={classes.addGolfer}>\n                    <Button\n                        className={classes.addButton}\n                        onClick={this.addGolfer}\n                        variant=\"contained\"\n                    >\n                        Add Golfer\n                    </Button>\n            </div>\n        ) : (\n            <div className={classes.addGolfer}>\n                <div className={classes.paper}>\n                <div>\n                    <TextField\n                    type=\"text\"\n                    label=\"First name\"\n                    className={classes.textField}\n                    variant=\"outlined\"\n                    value={this.state.first}\n                    onChange={this.handleInputChangeFor('first')}\n                    />\n                </div>\n                <div>\n                    <TextField\n                    type=\"text\"\n                    label=\"Last name\"\n                    className={classes.textField}\n                    variant=\"outlined\"\n                    value={this.state.last}\n                    onChange={this.handleInputChangeFor('last')}\n                    />\n                </div>\n                <div>\n                    <TextField\n                    type=\"text\"\n                    multiline\n                    rows=\"4\"\n                    label=\"Bio\"\n                    className={classes.textField}\n                    style={{width: '60%'}}\n                    variant=\"outlined\"\n                    value={this.state.bio}\n                    onChange={this.handleInputChangeFor('bio')}\n                    />\n                </div>\n                <div>\n                    <TextField\n                    type=\"text\"\n                    multiline\n                    rows=\"4\"\n                    label=\"Purpose\"\n                    className={classes.textField}\n                    style={{width: '60%'}}\n                    variant=\"outlined\"\n                    value={this.state.purpose}\n                    onChange={this.handleInputChangeFor('purpose')}\n                    />\n                </div>\n                <div>\n                    <TextField\n                    type=\"number\"\n                    label=\"Goal\"\n                    className={classes.textField}\n                    variant=\"outlined\"\n                    value={this.state.goal}\n                    onChange={this.handleInputChangeFor('goal')}\n                    />\n                </div>\n                <div>\n                <DropzoneS3Uploader\n                    children={innderDropElement}\n                    onFinish={this.handleFinishedUpload}\n                    s3Url={s3Url}\n                    style={dropStyles}\n                    maxSize={1024 * 1024 * 5}\n                    upload={uploadOptions}\n                />\n                </div>\n\n                <Button\n                    className={classes.cancelButton}\n                    onClick={this.cancelAddGolfer}\n                    variant=\"contained\"\n                >\n                    Cancel\n                </Button>\n                <Button\n                    className={classes.saveButton}\n                    onClick={this.saveAddGolfer}\n                    variant=\"contained\"\n                >\n                    Save\n                </Button>\n                </div>\n            </div>\n        )\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <h1>Golfers</h1>\n                    {addGolfer}\n                    <div className={classes.root}>\n                        <Grid container spacing={2}>\n                            {this.props.golferReducer.map( (item) => {\n                            if(item.first_name === 'General'){\n                                return null;\n                            } else {\n                            return(\n                                <Grid item xs key={item.id} className={classes.golfer}>\n                                    <h4 >{item.first_name} {item.last_name}</h4>\n                                    <img src={item.img_url} alt={item.id} style={{objectFit: 'cover'}} onClick={() => this.viewGolfer(item.id)} width='240px' height=\"200px\"/>\n                                    <div>\n                                        <Button\n                                            className={classes.cancelButton}\n                                            onClick={() => this.removeGolfer(item.id)}\n                                        >\n                                            Remove\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                )\n                                }\n                            })}\n                        </Grid>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    golferReducer: reduxStore.golferReducer\n});\n\nAdminGolfersPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminGolfersPage));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\nimport dayjs from 'dayjs';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = {\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    header: {\n        textAlign: 'center',\n        fontSize: '6rem',\n        padding: 0,\n        margin: '2rem',\n        color: '#253155'\n    },\n    topMargin: {\n        marginTop: '100px'\n    },\n    center: {\n        margin: '0 auto',\n        textAlign: 'center'\n    },\n    table: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    height: {\n        height: 800,\n        overflow: 'auto'\n    }\n   \n}\n\nexport class AdminPledgesPage extends Component {\n\n    state = {\n        startingDate: '',\n        endingDate: '',\n        filterDates: false,\n        deleteRows: false\n    }\n\n    componentDidMount(){\n        this.props.dispatch({ type: 'GET_DONATION_INFO' });\n    }\n\n    updatePaymentStatus = (id, status)  => {\n        console.log('in markAsPaid', id);\n        this.props.dispatch({ type: 'UPDATE_PAYMENT_STATUS', payload: {id: id, status: status} })\n    }\n\n    exportToExcel = () => {\n        console.log('in exportToExcel');\n        this.props.dispatch({ type: 'EXPORT_DONATIONS' })\n    }\n\n    filterDates = () => {\n        this.setState({\n            filterDates: true\n        })\n    }\n\n    sendFilter = () => {\n        this.props.dispatch({type: 'SEND_FILTER_DATES', payload: {\n            startingDate: this.state.startingDate,\n            endingDate: this.state.endingDate\n        }})\n        this.setState({\n            filterDates: false\n        })\n    }\n\n    cancelFilter = () => {\n        this.setState({\n            filterDates: false\n        })\n    }\n\n    deleteRows = () => {\n        this.setState({\n            deleteRows: true\n        })\n    }\n\n    sendDeleteRows = () => {\n        this.props.dispatch({type: 'SEND_DELETE_ROWS', payload: {\n            startingDate: this.state.startingDate,\n            endingDate: this.state.endingDate\n        }})\n        this.setState({\n            deleteRows: false\n        })\n    }\n\n    cancelDeleteRows = () => {\n        this.setState({\n            deleteRows: false\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    refreshPage() {\n        window.location.reload(false);\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        const filterDates = this.state.filterDates === false ? (\n            <Fragment>\n                    <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginTop: '10px'}}\n                    onClick={this.filterDates}\n                    >\n                        Filter\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <TextField\n                label=\"Starting Date\"\n                variant=\"outlined\"\n                type=\"date\"\n                style={{marginRight: '5px'}}\n                value={this.state.startingDate}\n                onChange={this.handleInputChangeFor('startingDate')}\n                InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n\n                <TextField\n                label=\"Ending Date\"\n                variant=\"outlined\"\n                type=\"date\"\n                style={{marginLeft: '5px'}}\n                value={this.state.endingDate}\n                onChange={this.handleInputChangeFor('endingDate')}\n                InputLabelProps={{\n                    shrink: true,\n                    }}\n                />\n                <div>\n                    <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#253155', color: '#ffffff', marginRight: '5px', marginTop: '5px'}}\n                    onClick={this.cancelFilter}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                    onClick={this.sendFilter}\n                    >\n                        Filter\n                    </Button>\n                </div>\n            </Fragment>\n        )\n\n        const deleteRows = this.state.deleteRows === false ? (\n            <Fragment>\n                    <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginTop: '10px'}}\n                    onClick={this.deleteRows}\n                    >\n                        Delete Rows\n                    </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div style={{marginTop: '20px'}}>\n                    <TextField\n                    label=\"Starting Date\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    style={{marginRight: '5px'}}\n                    value={this.state.startingDate}\n                    onChange={this.handleInputChangeFor('startingDate')}\n                    InputLabelProps={{\n                        shrink: true,\n                        }}\n                    />\n                    <TextField\n                    label=\"Ending Date\"\n                    variant=\"outlined\"\n                    type=\"date\"\n                    style={{marginLeft: '5px'}}\n                    value={this.state.endingDate}\n                    onChange={this.handleInputChangeFor('endingDate')}\n                    InputLabelProps={{\n                        shrink: true,\n                        }}\n                    />\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#253155', color: '#ffffff', marginRight: '5px', marginTop: '5px'}}\n                        onClick={this.cancelDeleteRows}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                        onClick={this.sendDeleteRows}\n                        >\n                            Delete\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        )\n\n        return (\n            <>\n            <div>\n                <AdminNav />\n            </div>\n            <div className={classes.topMargin}>\n                <div style={{textAlign: 'center'}}>\n                    <h2 className={classes.header}>Donations</h2>\n                </div>\n                <div className={classes.center}>\n                    <div>\n                        {filterDates}\n                    </div>\n                    <div>\n                        {deleteRows}\n                    </div>\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#b49759', color: '#ffffff', marginTop: '10px', marginBottom: '10px'}}\n                        onClick={this.refreshPage}\n                        >\n                            Refresh\n                        </Button>\n                    </div>\n                    <div className={classes.height}>\n                        <Paper className={classes.root}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Date</TableCell>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>Phone</TableCell>\n                                        <TableCell>Email</TableCell>\n                                        <TableCell>Type</TableCell>\n                                        <TableCell>Amount</TableCell>\n                                        <TableCell>Max</TableCell>\n                                        <TableCell>Golfer</TableCell>\n                                        <TableCell>Status</TableCell>\n                                        <TableCell>Mark Paid</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.props.donationReducer.map( donation => {\n                                        return (\n                                            <TableRow key={donation.id}>\n                                                <TableCell>{dayjs(donation.date).format('MM/DD/YYYY')}</TableCell>\n                                                <TableCell>{donation.first_name} {donation.last_name}</TableCell>\n                                                <TableCell>{donation.phone_number}</TableCell>\n                                                <TableCell>{donation.email}</TableCell>\n                                                <TableCell>{donation.type}</TableCell>\n                                                <TableCell>${parseInt(donation.amount).toLocaleString()}</TableCell>\n                                                <TableCell>{donation.max}</TableCell>\n                                                <TableCell>{donation.firstname} {donation.lastname}</TableCell>\n                                                <TableCell>{donation.status}</TableCell>\n                                                <TableCell><input type=\"checkbox\" name=\"status\"\n                                                    checked={donation.status === 'paid'} onChange={() => this.updatePaymentStatus(donation.id, donation.status)}/>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </div>\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#b49759', color: '#ffffff', marginTop: '10px'}}\n                        onClick={this.exportToExcel}\n                        >\n                            Export\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            </>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    donationReducer: reduxStore.donationReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminPledgesPage));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles =  {\n    header: {\n        textAlign: 'center',\n        fontSize: '6rem',\n        padding: '1rem',\n        margin: '2rem',\n        color: '#253155'\n    },\n    topMargin: {\n        marginTop: '8%'\n    },\n    center: {\n        textAlign: 'center',\n        margin: '0 auto'\n    },\n    card: {\n        width: '30%',\n        height: 'auto',\n        textAlign: 'center',\n        margin: ' 0 auto',\n        padding: '1.5rem',\n    },\n    partnerCard: {\n        width: '60%',\n        height: 'auto',\n        textAlign: 'center',\n        margin: '0 auto',\n        padding: '1.5rem',\n        marginTop: '1rem',\n        color: '#253155'\n    },\n    primaryButton: {\n        backgroundColor: '#b49759',\n        margin: '.25rem',\n        color: '#ffffff',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#b49759'\n            }\n    },\n    secondaryButton: {\n        backgroundColor: '#253155',\n        margin: '.25rem',\n        color: '#ffffff',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#253155'\n            }\n    }\n}\n\nconst dropStyles ={\n    width: \"40%\",\n    height: \"3.5rem\",\n    border: \"1px solid black\",\n    backgroundColor: \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto'\n}\n\nexport class AdminPartnersPage extends Component {\n\n    state = {\n        companyName: '',\n        url: '',\n        partnerLevel: '1',\n        level: '',\n        levelName: '',\n        addLevel: false,\n        addPartner: false\n    }\n\n    componentDidMount(){\n        this.props.dispatch({ type: 'GET_PARTNERS' });\n        this.props.dispatch({ type: 'GET_PARTNER_LEVELS'});\n    }\n\n    assignPartnerLevel = (event) => {\n        this.setState({\n            partnerLevel: event.target.value\n        })\n    }\n\n    handleCompanyNameChange = (event) => {\n        this.setState({\n            companyName: event.target.value\n        })\n    }\n\n    handleLevelChange = (event) => {\n        this.setState({\n            level: event.target.value\n        })\n    }\n\n    handleLevelNameChange = (event) => {\n        this.setState({\n            levelName: event.target.value\n        })\n    }\n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    addNewPartner = () => {\n        this.setState({\n            addPartner: true\n        })\n    }\n\n    cancelAddNewPartner = () => {\n        this.setState({\n            addPartner: false\n        })\n    }\n\n    addPartner = () => {\n        let objectToSend = {\n            companyName: this.state.companyName,\n            url: this.state.url,\n            partnerLevel: this.state.partnerLevel\n        }\n        this.props.dispatch({ type: 'ADD_PARTNER', payload: objectToSend });\n        this.setState({\n            companyName: '',\n            url: '',\n            partnerLevel: '',\n            addPartner: false\n        })\n    }\n\n    addPartnerLevel = () => {\n        this.setState({\n            addLevel: true\n        })\n        \n    }\n\n    cancelAddLevel = () => {\n        this.setState({\n            addLevel: false,\n            level: '',\n            levelName: ''\n        })\n    }\n\n    saveLevel = () => {\n        this.props.dispatch({ type: 'ADD_LEVEL', payload: {\n            name: this.state.levelName,\n            number: this.state.level\n        }})\n        this.setState({\n            levelName: '',\n            level: '',\n            addLevel: false\n        })\n    }\n\n    viewPartner = (id) => {\n        this.props.history.push(`/admin/partners/${id}`);\n    }\n\n    removePartner = (id)  => {\n        console.log('in removePartner with ID:', id);\n        this.props.dispatch({ type: 'REMOVE_PARTNER', payload: id });\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        const uploadOptions = {\n            server: 'https://lit-eyrie-42982.herokuapp.com/',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div className=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n        let currentLevel = null;\n\n        const addLevel = this.state.addLevel === false ? (\n            <Fragment>\n                <Select variant=\"outlined\" style={{marginTop: \"5px\"}} onChange={(event) => {this.assignPartnerLevel(event)}}>\n                            {this.props.level.map(level => (\n                                <MenuItem key={level.id} value={level.id}>\n                                    {level.title} ({level.amount})\n                                </MenuItem>\n                            )\n                            )}\n                </Select>\n                <Button\n                    variant=\"contained\"\n                    onClick={this.addPartnerLevel}\n                    className={classes.primaryButton}\n                >\n                    +\n                </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <TextField type=\"text\" placeholder=\"New Level Name\" variant=\"outlined\" onChange={this.handleLevelNameChange}/>\n                <TextField type=\"number\" placeholder=\"New Level Amount\" variant=\"outlined\" onChange={this.handleLevelChange} />\n                <div>\n                    <Button\n                        variant=\"contained\"\n                        onClick={this.cancelAddLevel}\n                        className={classes.secondaryButton}\n                    >\n                        Cancel\n                    </Button>\n                    <Button \n                        variant=\"contained\"\n                        onClick={this.saveLevel}\n                        className={classes.primaryButton}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Fragment>\n        )\n\n        const addPartnerButton = this.state.addPartner === false ? (\n            <Fragment>\n                <Button onClick={this.addNewPartner} className={classes.primaryButton}>Add Partner</Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <Card className={classes.card}>\n                <TextField\n                    label=\"Company Name\"\n                    style={{marginBottom: '5px'}}\n                    variant=\"outlined\"\n                    type=\"text\"\n                    onChange={this.handleCompanyNameChange} \n                />\n                <DropzoneS3Uploader\n                    children={innderDropElement}\n                    onFinish={this.handleFinishedUpload}\n                    s3Url={s3Url}\n                    style={dropStyles}\n                    maxSize={1024 * 1024 * 5}\n                    upload={uploadOptions}\n                />\n                {addLevel}\n                <div>\n                    <Button\n                        variant=\"contained\"\n                        onClick={this.cancelAddNewPartner}\n                        className={classes.secondaryButton}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={this.addPartner}\n                        className={classes.primaryButton}\n                    >\n                        Save\n                    </Button>\n                </div>\n                </Card>\n            </Fragment>\n        )\n\n        return (\n            <Fragment>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <h1>Partners</h1>\n                    <div className={classes.center}>\n                        {addPartnerButton}\n                    </div>\n                    <Card className={classes.partnerCard}>\n                        <div className=\"partner-box\">\n                            {this.props.companies.map(partner => {\n                                if(partner.sponsor_level === currentLevel){\n                                    return (\n                                        <span key={partner.id} style={{display: 'inline-block'}}>\n                                            <img src={partner.img_url} alt={partner.name} />\n                                            <div> \n                                                <Button \n                                                    variant=\"contained\"\n                                                    onClick={()=> this.removePartner(partner.id)}\n                                                    className={classes.secondaryButton}\n                                                >\n                                                    Remove\n                                                </Button>\n                                                <Button \n                                                    variant=\"contained\"\n                                                    onClick={() => this.viewPartner(partner.id)}\n                                                    className={classes.primaryButton}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </div>\n                                        </span>\n                                    )\n                                } \n                                else {\n                                    currentLevel = partner.sponsor_level;\n                                    return (\n                                        <Fragment>\n                                        <div key={partner.id} >\n                                            <h3>{partner.title} - ${parseInt(partner.amount).toLocaleString()}</h3>\n                                        </div>\n                                        <img src={partner.img_url} alt={partner.name} style={{display: 'inline-block'}}/>\n                                        <div>\n                                            <Button\n                                                variant=\"contained\"\n                                                onClick={()=> this.removePartner(partner.id)}\n                                                className={classes.secondaryButton}\n                                            >\n                                                Remove\n                                            </Button>\n                                            <Button \n                                                variant=\"contained\"\n                                                onClick={() => this.viewPartner(partner.id)}\n                                                className={classes.primaryButton}\n                                            >\n                                                Edit\n                                            </Button>\n                                        </div>\n                                        </Fragment>\n                                    )\n                                }\n                            })}\n                            </div>\n                    </Card>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    companies: reduxStore.partnerReducer.company,\n    level: reduxStore.partnerReducer.level\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminPartnersPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    root: {\n      flexGrow: 1,\n      width: '65%',\n      margin: '0 auto'\n    },\n    paper: {\n      padding: theme.spacing.unit,\n      textAlign: 'center',\n      color: '#253055',\n      margin: theme.spacing(2),\n      backgroundColor: '#ffffff'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n      },\n    topMargin: {\n        marginTop: '8%'\n    },\n    primaryButton: {\n        backgroundColor: '#b49759',\n        margin: '.5rem',\n        color: '#ffffff',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#b49759'\n            }\n    },\n    secondaryButton: {\n        backgroundColor: '#253155',\n        margin: '.5rem',\n        color: '#ffffff',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#253155'\n            }\n    }\n});\n\nclass AdminContactPage extends Component {\n\n    state = {\n        editAddress: false,\n        editContact: false,\n        street: '',\n        city: '',\n        state: '',\n        zip: '',\n        phone: '',\n        fax: '',\n        contactName: '',\n        contactEmail: ''\n    }\n\n    componentDidMount(){\n        this.props.dispatch({ type: 'GET_CONTACT_INFO' });\n        this.props.dispatch({ type: 'GET_ADDRESS_INFO' });\n    }\n\n    editAddress = () => {\n        if(this.state.editAddress === false){\n            this.setState({\n                editAddress: true,\n                street: this.props.addressReducer.street,\n                city: this.props.addressReducer.city,\n                state: this.props.addressReducer.state,\n                zip: this.props.addressReducer.zip,\n                phone: this.props.addressReducer.phone,\n                fax: this.props.addressReducer.fax\n\n            })\n        } else {\n            let objectToSend = {\n                    street: this.state.street,\n                    city: this.state.city,\n                    state: this.state.state,\n                    zip: this.state.zip,\n                    phone: this.state.phone,\n                    fax: this.state.fax,\n                    id: this.props.addressReducer.id\n                }\n            this.props.dispatch({type: 'EDIT_ADDRESS', payload: objectToSend})\n            this.setState({\n                editAddress: false\n            })\n        }\n    }\n\n    editContact = () => {\n        if(this.state.editContact === false){\n            this.setState({\n                editContact: true,\n                contactName: this.props.contactInfoReducer.name,\n                contactEmail: this.props.contactInfoReducer.email\n            })\n        } else {\n            let objectToSend = {\n                    contactName: this.state.contactName,\n                    contactEmail: this.state.contactEmail,\n                    id: this.props.contactInfoReducer.id\n                }\n            this.props.dispatch({type: 'EDIT_CONTACT', payload: objectToSend})\n            this.setState({\n                editContact: false\n            })\n        }\n    }\n\n    cancelEditAddress = () => {\n        this.setState({\n            editAddress: false\n        })\n    }\n\n    cancelEditContact = () => {\n        this.setState({\n            editContact: false\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        console.log('handling change for:', propertyName, 'value:', event.target.value);\n        \n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    render(props) {\n\n        const { classes } = this.props;\n\n        const editAddress = this.state.editAddress === false ? (\n            <Paper className={classes.paper}>\n                <h2>Address</h2>\n                <Button onClick={this.editAddress} variant=\"contained\" className={classes.primaryButton}>\n                    Edit\n                </Button>\n                <p>{this.props.addressReducer.street}<br/>\n                    {this.props.addressReducer.city}, {this.props.addressReducer.state}  {this.props.addressReducer.zip}<br/>\n                    info@minnesotapga.com<br/>\n                    Phone: {this.props.addressReducer.phone}<br/>\n                    Fax: {this.props.addressReducer.fax}\n                </p>\n            </Paper>\n\n        ) : (\n            <Paper className={classes.paper}>\n                <h2>Address</h2>\n                <TextField\n                    label=\"Street\"\n                    value={this.state.street}\n                    onChange={this.handleInputChangeFor('street')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    label=\"City\"\n                    value={this.state.city}\n                    onChange={this.handleInputChangeFor('city')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    label=\"State\"\n                    value={this.state.state}\n                    onChange={this.handleInputChangeFor('state')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    label=\"Zip Code\"\n                    value={this.state.zip}\n                    onChange={this.handleInputChangeFor('zip')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    label=\"Phone\"\n                    value={this.state.phone}\n                    onChange={this.handleInputChangeFor('phone')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    label=\"Fax\"\n                    value={this.state.fax}\n                    onChange={this.handleInputChangeFor('fax')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <div>\n                    <Button onClick={this.cancelEditAddress} variant=\"contained\" className={classes.secondaryButton}>\n                        Cancel\n                    </Button>\n                    <Button onClick={this.editAddress} variant=\"contained\" className={classes.primaryButton}>\n                        Save\n                    </Button>\n                </div>\n            </Paper>\n        )\n\n        const editContact = this.state.editContact === false ? (\n            <Paper className={classes.paper}>\n                <h2>Contact</h2>\n                <Button onClick={this.editContact} variant=\"contained\" className={classes.primaryButton}>\n                    Edit\n                </Button>\n                <p>For any additional information, please contact:<br/>\n                    <b>{this.props.contactInfoReducer.name}</b><br/>\n                    {this.props.contactInfoReducer.email}\n                </p>\n            </Paper>\n        ) : (\n            <Paper className={classes.paper}>\n                <h2>Contact</h2>\n                <TextField\n                    label=\"Name\"\n                    value={this.state.contactName}\n                    onChange={this.handleInputChangeFor('contactName')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <TextField\n                    label=\"Email\"\n                    value={this.state.contactEmail}\n                    onChange={this.handleInputChangeFor('contactEmail')}\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n                <Button onClick={this.cancelEditContact} variant=\"contained\" className={classes.secondaryButton}>\n                    Cancel\n                </Button>\n                <Button onClick={this.editContact} variant=\"contained\" className={classes.primaryButton}>\n                    Save\n                </Button>\n            </Paper>\n        )\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <h1>Contact</h1>\n                    <div className={classes.root}>\n                    <Grid container spacing={2}>\n                        <Grid item xs>\n                            {editAddress}\n                        </Grid>\n                        <Grid item xs>\n                            {editContact}\n                        </Grid>\n                    </Grid>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    addressReducer: reduxStore.addressReducer,\n    contactInfoReducer: reduxStore.contactInfoReducer\n});\n\nAdminContactPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminContactPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav'\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n    linearColorPrimary: {\n        backgroundColor: '#d3dee0',\n    },\n    linearBarColorPrimary: {\n        backgroundColor: '#b49759',\n    },\n    card: {\n        marginTop: '10%',\n        width: '60%',\n        margin: '0 auto',\n        padding: '2rem',\n        backgroundColor: '#ffffff',\n        color: '#253055',\n    },\n    leftCard: {\n        textAlign: 'center',\n        marginTop: '2rem',\n        padding: '1.5rem'\n    },\n    pledgeButton: {\n        backgroundColor: '#b49759',\n        margin: '1rem',\n        color: '#ffffff',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#b49759'\n            }\n    },\n    backButton: {\n        backgroundColor: '#253155',\n        margin: '1rem',\n        color: '#ffffff',\n        hover: 'pointer',\n            '&:hover': {\n                backgroundColor: '#253155'\n            }\n    }\n});\n\nclass golferDetails extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_GOLFER_DETAILS', payload: this.props.match.params.id })\n    }\n\n    render(props) {\n\n        const { classes } = this.props;\n        \n        let MAX = this.props.golferIdReducer.goal;\n        const golferDonationTotal = this.props.golferIdReducer.total;\n        const normalise = value => {\n            let normalizedNum = (Number(golferDonationTotal)) * 100 / (Number(MAX))\n            if (normalizedNum > 100){\n              normalizedNum = 100;\n            }\n            return normalizedNum;\n        };\n\n        return (\n            <div>\n                <Nav />\n                <Card className={classes.card}>\n                    <Grid container spacing={2}>\n                        <Grid item xs>\n                            <div className={classes.leftCard}>\n                                <img src={this.props.golferIdReducer.img_url} alt={this.props.golferIdReducer.id} width='280px' />\n                                <h3 >Total Donations: ${parseInt(this.props.golferIdReducer.total).toLocaleString()}</h3>\n                                <LinearProgress value={normalise(golferDonationTotal)} classes={{colorPrimary: classes.linearColorPrimary, barColorPrimary: classes.linearBarColorPrimary}} \n                                    onClick={this.handleTooltipOpen} color=\"primary\" variant=\"determinate\" style={{height:\"1.8rem\", width:\"65%\", borderRadius:\"2rem\", marginLeft:\"70px\"}}/>\n                                <h3>Goal: ${parseInt(this.props.golferIdReducer.goal).toLocaleString()}</h3>\n                                <Button variant=\"contained\" className={classes.pledgeButton} onClick={()=> this.props.history.push('/pledge')}>\n                                    Pledge\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs>\n                            <div>\n                                <h2>{this.props.golferIdReducer.first_name} {this.props.golferIdReducer.last_name}</h2>\n                                <h3>Bio</h3>\n                                <p>{this.props.golferIdReducer.bio}</p>\n                                <h3>Why am I doing this?</h3>\n                                <p>{this.props.golferIdReducer.purpose}</p>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Card>\n                <div style={{textAlign: 'center'}}>\n                    <Button variant=\"contained\" className={classes.backButton} onClick={()=> this.props.history.push('/golfers')}>\n                        Back\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\nconst putReduxStateOnProps = (reduxStore) => ({\n    golferIdReducer: reduxStore.golferIdReducer\n});\n\ngolferDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(golferDetails));","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles =  {\n    topMargin: {\n        marginTop: '100px'\n    },\n    textField: {\n        width: 600\n    }\n}\nconst dropStyles ={\n    width: \"200px\",\n    height: \"50px\",\n    border: \"1px solid black\",\n    \"background-color\": \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto'\n}\n\nclass AdminGolferDetails extends Component {\n\n    state = {\n        first: '',\n        last: '',\n        goal: '',\n        bio: '',\n        purpose: '',\n        url: '',\n        editName: false,\n        editImage: false,\n        editGoal: false,\n        editBio: false,\n        editPurpose: false,\n    }\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'ADMIN_GET_GOLFER_DETAILS', payload: this.props.match.params.id })\n    }\n\n    editName = () => {\n        this.setState({\n            editName: true,\n            first: this.props.golferIdReducer.first_name,\n            last: this.props.golferIdReducer.last_name\n        })\n    }\n\n    cancelEditName = () => {\n        this.setState({\n            editName: false,\n            first: '',\n            last: '',\n        })\n    }\n\n    saveEditName = () => {\n        this.props.dispatch({ type: 'EDIT_GOLFER_NAME', payload: {\n            first: this.state.first,\n            last: this.state.last,\n            id: this.props.golferIdReducer.id\n        }})\n        this.setState({\n            first: '',\n            last: '',\n            editName: false\n        })\n    }\n\n    editGoal = () => {\n        this.setState({\n            editGoal: true,\n            goal: this.props.golferIdReducer.goal\n        })\n    }\n\n    cancelEditGoal = () => {\n        this.setState({\n            editGoal: false,\n            goal: ''\n        })\n    }\n\n    saveEditGoal = () => {\n        this.props.dispatch({ type: 'EDIT_GOLFER_GOAL', payload: {\n            goal: this.state.goal,\n            id: this.props.golferIdReducer.id\n        }})\n        this.setState({\n            goal: '',\n            editGoal: false\n        })\n    }\n\n    editBio = () => {\n        this.setState({\n            editBio: true,\n            bio: this.props.golferIdReducer.bio\n        })\n    }\n\n    cancelEditBio = () => {\n        this.setState({\n            editBio: false,\n            bio: ''\n        })\n    }\n\n    saveEditBio = () => {\n        this.props.dispatch({ type: 'EDIT_GOLFER_BIO', payload: {\n            bio: this.state.bio,\n            id: this.props.golferIdReducer.id\n        }})\n        this.setState({\n            bio: '',\n            editBio: false\n        })\n    }\n\n    editPurpose = () => {\n        this.setState({\n            editPurpose: true,\n            purpose: this.props.golferIdReducer.purpose\n        })\n    }\n\n    cancelEditPurpose = () => {\n        this.setState({\n            editPurpose: false,\n            purpose: ''\n        })\n    }\n\n    saveEditPurpose = () => {\n        this.props.dispatch({ type: 'EDIT_GOLFER_PURPOSE', payload: {\n            purpose: this.state.purpose,\n            id: this.props.golferIdReducer.id\n        }})\n        this.setState({\n            purpose: '',\n            editPurpose: false\n        })\n    }\n\n    editPhoto = () => {\n        this.setState({\n            editImage: true\n        })\n    }\n\n    cancelEditPhoto = () => {\n        this.setState({\n            editImage: false\n        })\n    }\n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    saveEditPhoto = () => {\n        this.props.dispatch({ type: 'EDIT_GOLFER_PHOTO', payload: {\n            url: this.state.url,\n            id: this.props.golferIdReducer.id\n        }})\n        this.setState({\n            editImage: false\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    render() {\n\n        const { classes } = this.props;\n\n        const uploadOptions = {\n            server: 'https://lit-eyrie-42982.herokuapp.com/',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div class=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n\n        const editName = this.state.editName === false ? (\n            <Fragment>\n                <h3>{this.props.golferIdReducer.first_name} {this.props.golferIdReducer.last_name}</h3>\n                <Button\n                onClick={this.editName}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Edit Name\n                </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div style={{marginTop:6}}>\n                    <TextField\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    value={this.state.first}\n                    onChange={this.handleInputChangeFor('first')}\n                    />\n                </div>\n                <div style={{marginTop:6}}>\n                    <TextField\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    value={this.state.last}\n                    onChange={this.handleInputChangeFor('last')}\n                    />\n                </div>\n                <Button\n                onClick={this.cancelEditName}\n                variant=\"contained\"\n                style={{backgroundColor: '#253155', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Cancel\n                </Button>\n                <Button\n                onClick={this.saveEditName}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                \n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        const editGoal = this.state.editGoal === false ? (\n            <Fragment>\n                <div>\n                    <h3>Goal: ${parseInt(this.props.golferIdReducer.goal).toLocaleString()}</h3>\n                </div>\n                <div>\n                <Button\n                onClick={this.editGoal}\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Edit Goal\n                </Button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div>\n                    <TextField\n                    label=\"Goal\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={this.state.goal}\n                    onChange={this.handleInputChangeFor('goal')}\n                    />\n                </div>\n                <Button\n                onClick={this.cancelEditGoal}\n                variant=\"contained\"\n                style={{backgroundColor: '#253155', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Cancel\n                </Button>\n                <Button\n                onClick={this.saveEditGoal}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        const editBio = this.state.editBio === false ? (\n            <Fragment>\n                <p>{this.props.golferIdReducer.bio}</p>\n                <Button\n                onClick={this.editBio}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Edit Bio\n                </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div>\n                    <TextField\n                    label='Bio'\n                    className={classes.textField}\n                    multiline\n                    variant=\"outlined\"\n                    type=\"text\"\n                    rows=\"6\"\n                    value={this.state.bio}\n                    onChange={this.handleInputChangeFor('bio')}\n                    />\n                </div>\n                <Button\n                onClick={this.cancelEditBio}\n                variant=\"contained\"\n                style={{backgroundColor: '#253155', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Cancel\n                </Button>\n                <Button\n                onClick={this.saveEditBio}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        const editPurpose = this.state.editPurpose === false ? (\n            <Fragment>\n                <p>{this.props.golferIdReducer.purpose}</p>\n                <Button\n                onClick={this.editPurpose}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Edit purpose\n                </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div>\n                    <TextField\n                    label='Purpose'\n                    className={classes.textField}\n                    multiline\n                    variant=\"outlined\"\n                    type=\"text\"\n                    rows=\"6\"\n                    value={this.state.purpose}\n                    onChange={this.handleInputChangeFor('purpose')}\n                    />\n                </div>\n                <Button\n                onClick={this.cancelEditPurpose}\n                variant=\"contained\"\n                style={{backgroundColor: '#253155', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Cancel\n                </Button>\n                <Button\n                onClick={this.saveEditPurpose}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        const editImage = this.state.editImage === false ? (\n            <Fragment>\n                <img src={this.props.golferIdReducer.img_url} alt={this.props.golferIdReducer.id} style={{objectFit: 'cover'}} width='220px' height='200px' />\n                <div style={{textAlign:'center'}}>\n                    <Button\n                    onClick={this.editPhoto}\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                    >\n                        Edit Photo\n                    </Button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <DropzoneS3Uploader\n                    children={innderDropElement}\n                    onFinish={this.handleFinishedUpload}\n                    s3Url={s3Url}\n                    style={dropStyles}\n                    maxSize={1024 * 1024 * 5}\n                    upload={uploadOptions}\n                />\n                <Button\n                onClick={this.cancelEditPhoto}\n                variant=\"contained\"\n                style={{backgroundColor: '#253155', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Cancel\n                </Button>\n                <Button\n                onClick={this.saveEditPhoto}\n                variant=\"contained\"\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <div style={{textAlign:'center', marginTop:1}}>\n                        {editName}\n                    </div>\n                    <div style={{textAlign:'center', marginTop:10}}>\n                        {editImage}\n                    </div>\n                    <div style={{textAlign:'center', marginTop:10}}>\n                        {editGoal}\n                    </div>\n                    <div style={{textAlign:'center', marginTop:10}}>\n                    <h3>Bio</h3>\n                    {editBio}\n                    </div>\n                    <div style={{textAlign:'center', marginTop:10}}>\n                    <h3>Why am I doing this?</h3>\n                    {editPurpose}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    golferIdReducer: reduxStore.golferIdReducer\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminGolferDetails));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles =  {\n    topMargin: {\n        marginTop: '120px',\n        textAlign: 'center'\n    }\n}\n\nconst dropStyles ={\n    width: \"200px\",\n    height: \"50px\",\n    border: \"1px solid black\",\n    \"background-color\": \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto'\n}\n\n\nclass AdminPartnerDetails extends Component {\n\n    state = {\n        name: '',\n        level: '',\n        url: '',\n        editName: false,\n        editImage: false,\n        editLevel: false,\n    }\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_PARTNER_DETAILS', payload: this.props.match.params.id });\n    }\n\n    editName = () => {\n        this.setState({\n            editName: true,\n            name: this.props.partner.company,\n        })\n    }\n\n    cancelEditName = () => {\n        this.setState({\n            editName: false,\n            name: '',\n        })\n    }\n\n    saveEditName = () => {\n        this.props.dispatch({ type: 'EDIT_PARTNER_NAME', payload: {\n            name: this.state.name,\n            id: this.props.partner.id\n        }})\n        this.setState({\n            name: '',\n            editName: false\n        })\n    }\n\n    editLevel = () => {\n        this.setState({\n            editLevel: true,\n        })\n    }\n\n    assignPartnerLevel = (event) => {\n        this.setState({\n            level: event.target.value\n        })\n    }\n\n    cancelEditLevel = () => {\n        this.setState({\n            editLevel: false,\n            level: ''\n        })\n    }\n\n    saveEditLevel = () => {\n        this.props.dispatch({ type: 'EDIT_PARTNER_LEVEL', payload: {\n            level: this.state.level,\n            id: this.props.partner.id\n        }})\n        this.setState({\n            level: '',\n            editLevel: false\n        })\n    }\n\n\n    editImage = () => {\n        this.setState({\n            editImage: true\n        })\n    }\n\n    cancelEditImage = () => {\n        this.setState({\n            editImage: false\n        })\n    }\n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    saveEditImage = () => {\n        this.props.dispatch({ type: 'EDIT_PARTNER_IMAGE', payload: {\n            url: this.state.url,\n            id: this.props.partner.id\n        }})\n        this.setState({\n            editImage: false\n        })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    goBack = () => {\n        this.props.history.push('/admin/partners')\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        const uploadOptions = {\n            server: 'https://lit-eyrie-42982.herokuapp.com/',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div className=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n\n        const editName = this.state.editName === false ? (\n            <Fragment>\n                <h2>{this.props.partner.company}</h2>\n                <Button\n                style={{backgroundColor: '#b49759', color: '#ffffff', marginBottom: '10px'}}\n                onClick={this.editName}\n                >\n                    Edit Name\n                </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div>\n                    <TextField\n                    label=\"Organization Name\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    value={this.state.name}\n                    onChange={this.handleInputChangeFor('name')}\n                    />\n                </div>\n                <div style={{marginBottom: '10px'}}>\n                    <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#253155', color: '#ffffff', marginRight: '5px', marginTop: '5px'}}\n                        onClick={this.cancelEditName}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                        onClick={this.saveEditName}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Fragment>\n        )\n\n        const editLevel = this.state.editLevel === false ? (\n            <Fragment>\n                <h2>{this.props.partner.title}</h2>\n                <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                    onClick={this.editLevel}\n                >\n                    Edit Level\n                </Button>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div style={{marginTop: '10px'}}>\n                <Select variant=\"outlined\" onChange={(event) => {this.assignPartnerLevel(event)}}>\n                    {this.props.level.map(level => {\n                        if(level.title === 'IN-KIND'){\n                            return (\n                                <MenuItem>\n                                    {level.title}\n                                </MenuItem>\n                            )\n                        }else {\n                            return(\n                                <MenuItem key={level.id} value={level.id}>\n                                {level.title} (${parseInt(level.amount).toLocaleString()})\n                            </MenuItem>\n                            )\n                        }\n                    })}\n                </Select>\n                </div>\n                <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#253155', color: '#ffffff', marginRight: '5px', marginTop: '5px'}}\n                    onClick={this.cancelEditLevel}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                    onClick={this.saveEditLevel}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        const editImage = this.state.editImage === false ? (\n            <Fragment>\n                <img src={this.props.partner.img_url} alt={this.props.partner.company} width='220px' height='200px' />\n                <div>\n                    <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                        onClick={this.editImage}\n                    >\n                        Edit Image\n                    </Button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <DropzoneS3Uploader\n                    children={innderDropElement}\n                    onFinish={this.handleFinishedUpload}\n                    s3Url={s3Url}\n                    style={dropStyles}\n                    maxSize={1024 * 1024 * 5}\n                    upload={uploadOptions}\n                />\n                <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#253155', color: '#ffffff', marginRight: '5px', marginTop: '5px'}}\n                    onClick={this.cancelEditImage}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    style={{backgroundColor: '#b49759', color: '#ffffff', marginLeft: '5px', marginTop: '5px'}}\n                    onClick={this.saveEditImage}\n                >\n                    Save\n                </Button>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    <div>\n                        {editName}\n                    </div>\n                    <div>\n                        {editImage}\n                    </div>\n                    <div>\n                        {editLevel}\n                    </div>\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        style={{backgroundColor: '#253155', color: '#ffffff', marginTop: '10px'}}\n                        onClick={this.goBack}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    partner: reduxStore.partnerReducer.partner,\n    level: reduxStore.partnerReducer.level\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminPartnerDetails));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\nimport AdminNav from '../AdminNav/AdminNav'\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = {\n    center: {\n        textAlign: 'center'\n    },\n    primaryButton: {\n        backgroundColor: '#b49759', \n        color: '#ffffff',\n        marginTop: 10,\n        '&:hover': {\n            backgroundColor: '#b49759'\n        }\n    },\n    secondaryButton: {\n        backgroundColor: '#253155', \n        color: '#ffffff',\n        marginTop: 10,\n        '&:hover': {\n            backgroundColor: '#253155'\n        }\n    },\n    textField: {\n        width: 300\n    },\n    textArea: {\n        width: 600,\n        marginTop: 10\n    },\n    paragraph: {\n        width: 600, \n        margin: '0 auto'\n    },\n    topMargin: {\n        marginTop: 130\n    }\n}\n\nconst dropStyles ={\n    width: \"200px\",\n    height: \"50px\",\n    border: \"1px solid black\",\n    \"background-color\": \"#dddddd\",\n    cursor: \"pointer\",\n    margin: '0 auto',\n    marginTop: 10\n}\n\n\nexport class AdminFoundationDetails extends Component {\n\n    state = {\n        title: '',\n        url: '',\n        bio: '',\n        editName: false,\n        editImage: false,\n        editBio: false\n    }\n\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        this.props.dispatch({ type: 'GET_FOUNDATION_DETAILS', payload: this.props.match.params.id })\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    };\n\n    handleFinishedUpload = info => {\n        this.setState({\n            url: info.fileUrl\n        })\n    }\n\n    editName = () => {\n        this.setState({\n            title: this.props.foundationDetailsReducer.name,\n            editName: true\n        })\n    }\n\n    cancelEditName = () => {\n        this.setState({\n            editName: false\n        })\n    }\n\n    saveEditName = () => {\n        this.props.dispatch({type: 'EDIT_FOUNDATION_NAME', payload: {\n            id: this.props.foundationDetailsReducer.id,\n            name: this.state.title\n        }})\n        this.setState({\n            editName: false\n        })\n    }\n\n    editImage = () => {\n        this.setState({\n            editImage: true\n        })\n    }\n\n    cancelEditImage = () => {\n        this.setState({\n            editImage: false\n        })\n    }\n\n    saveEditImage = () => {\n        this.props.dispatch({type: 'EDIT_FOUNDATION_IMAGE', payload: {\n            id: this.props.foundationDetailsReducer.id,\n            url: this.state.url\n        }})\n        this.setState({\n            editImage: false,\n            url: ''\n        })\n    }\n\n    editBio = () => {\n        this.setState({\n            editBio: true,\n            bio: this.props.foundationDetailsReducer.bio\n        })\n    }\n\n    cancelEditBio = () => {\n        this.setState({\n            editBio: false\n        })\n    }\n\n    saveEditBio = () => {\n        this.props.dispatch({type: 'EDIT_FOUNDATION_BIO', payload: {\n            id: this.props.foundationDetailsReducer.id,\n            bio: this.state.bio\n        }})\n        this.setState({\n            editBio: false\n        })\n    }\n\n    goBack = () => {\n        this.props.history.push('/admin/about')\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        const uploadOptions = {\n            server: 'http://localhost:5000',\n            // signingUrlQueryParams: {uploadType: 'avatar'},\n        }\n\n        const s3Url = 'https://hundred-holes-bucket.s3.amazonaws.com'\n\n        const innderDropElement = (\n            <div class=\"inner-drop\">\n                <p>Click or Drop File Here!</p>\n            </div>\n        )\n\n        const editName = this.state.editName === false ? (\n            <Fragment>\n                <div className={classes.center}>\n                    <h2>{this.props.foundationDetailsReducer.name}</h2>\n                    <Button\n                    variant=\"contained\"\n                    className={classes.primaryButton}\n                    onClick={this.editName}\n                    >\n                        Edit\n                    </Button>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div className={classes.center}>\n                    <TextField\n                        type=\"text\"\n                        variant=\"outlined\"\n                        className={classes.textField}\n                        value={this.state.title}\n                        onChange={this.handleInputChangeFor('title')}\n                    />\n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.secondaryButton}\n                            style={{marginRight: '10px'}}\n                            onClick={this.cancelEditName}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.primaryButton}\n                            style={{marginLeft: '10px'}}\n                            onClick={this.saveEditName}\n                        >\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        )\n\n        const editImage = this.state.editImage === false ? (\n            <Fragment>\n                <div className={classes.center}>\n                    <div style={{marginTop: '10px'}}>\n                        <img src={this.props.foundationDetailsReducer.url} alt={this.props.bio} width='260px' />\n                    </div>\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                        onClick={this.editImage}\n                        >\n                            Edit\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div className={classes.center}>\n                    <div>\n                        <DropzoneS3Uploader\n                        children={innderDropElement}\n                        onFinish={this.handleFinishedUpload}\n                        s3Url={s3Url}\n                        style={dropStyles}\n                        maxSize={1024 * 1024 * 5}\n                        upload={uploadOptions}\n                    />\n                    </div>\n                    \n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.secondaryButton}\n                            style={{marginRight: '10px'}}\n                            onClick={this.cancelEditImage}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.primaryButton}\n                            style={{marginLeft: '10px'}}\n                            onClick={this.saveEditImage}\n                        >\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        )\n\n        const editBio = this.state.editBio === false ? (\n            <Fragment>\n                <div className={classes.center}>\n                    <div style={{marginTop: '10px'}}>\n                        <p className={classes.paragraph}>{this.props.foundationDetailsReducer.bio}</p>\n                    </div>\n                    <div>\n                        <Button\n                        variant=\"contained\"\n                        className={classes.primaryButton}\n                        onClick={this.editBio}\n                        >\n                            Edit\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        ) : (\n            <Fragment>\n                <div className={classes.center}>\n                    <div>\n                    <TextField\n                        label=\"Bio\"\n                        multiline\n                        variant=\"outlined\"\n                        type=\"text\"\n                        rows=\"6\"\n                        className={classes.textArea}\n                        value={this.state.bio}\n                        onChange={this.handleInputChangeFor('bio')}\n                    />\n                    </div>\n                    \n                    <div>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.secondaryButton}\n                            style={{marginRight: '10px'}}\n                            onClick={this.cancelEditBio}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.primaryButton}\n                            style={{marginLeft: '10px'}}\n                            onClick={this.saveEditBio}\n                        >\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <AdminNav />\n                <div className={classes.topMargin}>\n                    {editName}\n                </div>\n                <div>\n                    {editImage}\n                </div>\n                <div>\n                    {editBio}\n                </div>\n                <div className={classes.center}>\n                    <Button\n                    variant=\"contained\"\n                    className={classes.secondaryButton}\n                    onClick={this.goBack}>Back</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    foundationDetailsReducer: reduxStore.foundationDetailsReducer\n});\n\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminFoundationDetails));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport AdminNav from '../AdminNav/AdminNav';\n\n//Material UI Stuff\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles =  {\n  card: {\n    minWidth: 275,\n    width: 300,\n    textAlign: 'center',\n    marginTop: '100px'\n  },\n  pageTitle: {\n    margin: '20px auto 20px auto'\n  },\n  textField: {\n    marginBottom: '10px',\n    width: 200,\n  },\n  button: {\n    marginBottom: '10px'\n  },\n  topMargin: {\n    marginTop: 130\n}\n};\n\nclass AdminChangePassword extends Component {\n\n    state = { \n        old: '',\n        new: ''\n    }\n\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n          [propertyName]: event.target.value,\n        });\n    }\n\n    updatePassword = (event) => {\n        event.preventDefault();\n    \n        if (this.state.old && this.state.new) {\n          this.props.dispatch({\n            type: 'NEW_PASSWORD',\n            payload: {\n              old: this.state.old,\n              new: this.state.new,\n              id: this.props.user.id\n            }\n          })\n        //   alert('Password Updated')\n        } else {\n          alert('Textfields must not be empty')\n        }\n      } // end login\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n            <AdminNav />\n            <div className={classes.topMargin}>\n                <h2>Change Password</h2>\n            </div>\n            <Grid \n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            >\n             <Grid item>\n                <Card className={classes.card}>\n                {this.props.errors.loginMessage && (\n                    <h2\n                        className=\"alert\"\n                        role=\"alert\"\n                    >\n                        {this.props.errors.loginMessage}\n                    </h2>\n                    )}\n                    <CardContent>\n                    <form onSubmit={this.updatePassword}>\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\n                        Change Password\n                    </Typography>\n                    <div>\n                        <TextField\n                            type=\"password\"\n                            name=\"old\"\n                            label=\"Old Password\"\n                            variant=\"outlined\"\n                            className={classes.textField}\n                            value={this.state.old}\n                            onChange={this.handleInputChangeFor('old')}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                            type=\"password\"\n                            name=\"new\"\n                            label=\"New Password\"\n                            variant=\"outlined\"\n                            className={classes.textField}\n                            value={this.state.new}\n                            onChange={this.handleInputChangeFor('new')}\n                        />\n                    </div>\n                    <div>\n                        <Button \n                            className={classes.button}\n                            type=\"submit\"\n                            name=\"submit\"\n                            value=\"Log In\"\n                            variant=\"contained\"\n                            style={{backgroundColor: 'rgb(180,151,89)', color: '#FFFFFF'}}\n                        >\n                        Save\n                        </Button>\n                    </div>\n                    </form>\n                    </CardContent>\n                </Card>\n                </Grid>\n            </Grid>\n            </Fragment>\n        )\n    }\n}\n\nconst putReduxStateOnProps = (reduxStore) => ({\n    user: reduxStore.user,\n    errors: reduxStore.errors,\n});\n\nexport default connect(putReduxStateOnProps)(withStyles(styles)(AdminChangePassword));\n","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\n// import Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport PhotosPage from '../PhotosPage/PhotosPage';\nimport GolfersPage from '../GolfersPage/GolfersPage';\nimport PledgePage from '../PledgePage/PledgePage';\nimport PartnersPage from '../PartnersPage/ParntersPage';\nimport ContactPage from '../ContactPage/ContactPage';\n\nimport AdminHome from '../AdminHomePage/AdminHomePage';\nimport AdminAbout from '../AdminAboutPage/AdminAboutPage';\nimport AdminPhotos from '../AdminPhotosPage/AdminPhotosPage';\nimport AdminGolfers from '../AdminGolfersPage/AdminGolfersPage';\nimport AdminPledges from '../AdminPledgesPage/AdminPledgesPage';\nimport AdminPartners from '../AdminPartnersPage/AdminPartnersPage';\nimport AdminContact from '../AdminContactPage/AdminContactPage';\nimport golferDetails from '../golferDetails/golferDetails';\nimport AdminGolferDetails from '../AdminGolferDetails/AdminGolferDetails';\nimport AdminPartnerDetails from '../AdminPartnerDetails/AdminPartnerDetails';\nimport AdminFoundationDetails from '../AdminFoundationDetails/AdminFoundationDetails';\nimport AdminChangePassword from '../AdminChangePassword/AdminChangePassword';\n\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route\n              exact\n              path=\"/home\"\n              component={UserPage}\n            />\n           <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            <Route\n              exact\n              path=\"/photos\"\n              component={PhotosPage}\n            />\n            <Route\n              exact\n              path=\"/golfers\"\n              component={GolfersPage}\n            />\n            <Route \n              path='/view/:id' \n              component={golferDetails}\n            />\n            <Route\n              exact\n              path=\"/pledge\"\n              component={PledgePage}\n            />\n            <Route\n              exact\n              path=\"/partners\"\n              component={PartnersPage}\n            />\n            <Route\n              exact\n              path=\"/contact\"\n              component={ContactPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin\"\n              component={AdminHome}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/about\"\n              component={AdminAbout}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/foundation/:id\"\n              component={AdminFoundationDetails}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/photos\"\n              component={AdminPhotos}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/golfers\"\n              component={AdminGolfers}\n            />\n            <ProtectedRoute \n              path=\"/admin/golfers/:id\"\n              component={AdminGolferDetails}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/pledges\"\n              component={AdminPledges}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/partners\"\n              component={AdminPartners}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/partners/:id\"\n              component={AdminPartnerDetails}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/admin/contact\"\n              component={AdminContact}\n            />\n            <ProtectedRoute \n              exact\n              path=\"/admin/password\"\n              component={AdminChangePassword}\n            />\n           \n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);","module.exports = __webpack_public_path__ + \"static/media/100HolesforHope.ea75e5d7.png\";","module.exports = __webpack_public_path__ + \"static/media/100HolesforHope.ea75e5d7.png\";","module.exports = __webpack_public_path__ + \"static/media/100HolesforHope.ea75e5d7.png\";"],"sourceRoot":""}